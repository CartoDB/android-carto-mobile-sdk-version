/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.ui;

import com.carto.core.MapPos;
import com.carto.core.ScreenPos;
import com.carto.vectorelements.VectorElement;

/**
 * A container class that provides information about a dragging performed on<br>
 * a vector element or vector element vertex.
 */
public class VectorElementDragInfo {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public VectorElementDragInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(VectorElementDragInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VectorElementDragInfoModuleJNI.delete_VectorElementDragInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof VectorElementDragInfo) {
      return ((VectorElementDragInfo)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Returns the drag mode.<br>
 * @return The drag mode.
 */
  public VectorElementDragMode getDragMode() {
    return VectorElementDragMode.swigToEnum(VectorElementDragInfoModuleJNI.VectorElementDragInfo_getDragMode(swigCPtr, this));
  }

/**
 * Returns the drag position in screen coordinates.<br>
 * @return The drag position in screen coordinates.
 */
  public ScreenPos getScreenPos() { return new ScreenPos(VectorElementDragInfoModuleJNI.VectorElementDragInfo_getScreenPos(swigCPtr, this), true); }

/**
 * Returns the drag position in projection coordinate system of the layer.<br>
 * @return The drag position in projection coordinate system of the layer.
 */
  public MapPos getMapPos() { return new MapPos(VectorElementDragInfoModuleJNI.VectorElementDragInfo_getMapPos(swigCPtr, this), true); }

/**
 * Returns the vector element being dragged.<br>
 * @return The vector element being dragged.
 */
  public VectorElement getVectorElement() {
  long cPtr = VectorElementDragInfoModuleJNI.VectorElementDragInfo_getVectorElement(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.vectorelements.VectorElement.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return VectorElementDragInfoModuleJNI.VectorElementDragInfo_swigGetRawPtr(swigCPtr, this);
  }

}
