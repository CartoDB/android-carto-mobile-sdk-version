/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.ui;

import com.carto.core.MapPos;
import com.carto.core.MapVec;
import com.carto.core.MapBounds;
import com.carto.core.ScreenPos;
import com.carto.core.ScreenBounds;
import com.carto.components.Options;
import com.carto.components.Layers;
import com.carto.components.LicenseManagerListener;
import com.carto.renderers.MapRenderer;
import com.carto.renderers.RedrawRequestListener;
import com.carto.ui.MapEventListener;

/** @hidden */
public class BaseMapViewModuleJNI {
  public final static native boolean BaseMapView_registerLicense(String jarg1, long jarg2, LicenseManagerListener jarg2_);
  public final static native String BaseMapView_getSDKVersion();
  public final static native long new_BaseMapView();
  public final static native void delete_BaseMapView(long jarg1);
  public final static native void BaseMapView_onSurfaceCreated(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_onSurfaceChanged(long jarg1, BaseMapView jarg1_, int jarg2, int jarg3);
  public final static native void BaseMapView_onDrawFrame(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_onSurfaceDestroyed(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_finishRendering(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_onInputEvent(long jarg1, BaseMapView jarg1_, int jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void BaseMapView_onWheelEvent(long jarg1, BaseMapView jarg1_, int jarg2, float jarg3, float jarg4);
  public final static native long BaseMapView_getLayers(long jarg1, BaseMapView jarg1_);
  public final static native long BaseMapView_getOptions(long jarg1, BaseMapView jarg1_);
  public final static native long BaseMapView_getMapRenderer(long jarg1, BaseMapView jarg1_);
  public final static native long BaseMapView_getFocusPos(long jarg1, BaseMapView jarg1_);
  public final static native float BaseMapView_getRotation(long jarg1, BaseMapView jarg1_);
  public final static native float BaseMapView_getTilt(long jarg1, BaseMapView jarg1_);
  public final static native float BaseMapView_getZoom(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_pan(long jarg1, BaseMapView jarg1_, long jarg2, MapVec jarg2_, float jarg3);
  public final static native void BaseMapView_setFocusPos(long jarg1, BaseMapView jarg1_, long jarg2, MapPos jarg2_, float jarg3);
  public final static native void BaseMapView_rotate__SWIG_0(long jarg1, BaseMapView jarg1_, float jarg2, float jarg3);
  public final static native void BaseMapView_rotate__SWIG_1(long jarg1, BaseMapView jarg1_, float jarg2, long jarg3, MapPos jarg3_, float jarg4);
  public final static native void BaseMapView_setRotation__SWIG_0(long jarg1, BaseMapView jarg1_, float jarg2, float jarg3);
  public final static native void BaseMapView_setRotation__SWIG_1(long jarg1, BaseMapView jarg1_, float jarg2, long jarg3, MapPos jarg3_, float jarg4);
  public final static native void BaseMapView_tilt(long jarg1, BaseMapView jarg1_, float jarg2, float jarg3);
  public final static native void BaseMapView_setTilt(long jarg1, BaseMapView jarg1_, float jarg2, float jarg3);
  public final static native void BaseMapView_zoom__SWIG_0(long jarg1, BaseMapView jarg1_, float jarg2, float jarg3);
  public final static native void BaseMapView_zoom__SWIG_1(long jarg1, BaseMapView jarg1_, float jarg2, long jarg3, MapPos jarg3_, float jarg4);
  public final static native void BaseMapView_setZoom__SWIG_0(long jarg1, BaseMapView jarg1_, float jarg2, float jarg3);
  public final static native void BaseMapView_setZoom__SWIG_1(long jarg1, BaseMapView jarg1_, float jarg2, long jarg3, MapPos jarg3_, float jarg4);
  public final static native void BaseMapView_moveToFitBounds__SWIG_0(long jarg1, BaseMapView jarg1_, long jarg2, MapBounds jarg2_, long jarg3, ScreenBounds jarg3_, boolean jarg4, float jarg5);
  public final static native void BaseMapView_moveToFitBounds__SWIG_1(long jarg1, BaseMapView jarg1_, long jarg2, MapBounds jarg2_, long jarg3, ScreenBounds jarg3_, boolean jarg4, boolean jarg5, boolean jarg6, float jarg7);
  public final static native long BaseMapView_getMapEventListener(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_setMapEventListener(long jarg1, BaseMapView jarg1_, long jarg2, MapEventListener jarg2_);
  public final static native long BaseMapView_getRedrawRequestListener(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_setRedrawRequestListener(long jarg1, BaseMapView jarg1_, long jarg2, RedrawRequestListener jarg2_);
  public final static native long BaseMapView_screenToMap(long jarg1, BaseMapView jarg1_, long jarg2, ScreenPos jarg2_);
  public final static native long BaseMapView_mapToScreen(long jarg1, BaseMapView jarg1_, long jarg2, MapPos jarg2_);
  public final static native void BaseMapView_cancelAllTasks(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_clearPreloadingCaches(long jarg1, BaseMapView jarg1_);
  public final static native void BaseMapView_clearAllCaches(long jarg1, BaseMapView jarg1_);
}
