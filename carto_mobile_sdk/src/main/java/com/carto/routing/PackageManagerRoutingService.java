/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.routing;

import com.carto.packagemanager.PackageManager;
import com.carto.routing.RoutingService;
import com.carto.routing.RoutingRequest;
import com.carto.routing.RoutingResult;
import com.carto.routing.RouteMatchingRequest;
import com.carto.routing.RouteMatchingResult;

/**
 * A routing service that uses routing packages from package manager.
 */
@com.carto.utils.DontObfuscate public class PackageManagerRoutingService extends RoutingService {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public PackageManagerRoutingService(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(PackageManagerRoutingService obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        PackageManagerRoutingServiceModuleJNI.delete_PackageManagerRoutingService(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  /** @hidden */
  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  /** @hidden */
  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_change_ownership(this, swigCPtr, false);
  }

  /** @hidden */
  public void swigTakeOwnership() {
    swigCMemOwn = true;
    PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_change_ownership(this, swigCPtr, true);
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.routing.PackageManagerRoutingService swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.routing.PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.routing.PackageManagerRoutingService) director;
    }

    String objClassName = com.carto.routing.PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_swigGetClassName(cPtr, null);
    com.carto.routing.PackageManagerRoutingService objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.routing." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.routing.PackageManagerRoutingService) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a new instance of the PackageManagerRoutingService given package manager instance.<br>
 * @param packageManager The package manager instance to use.
 */
  public PackageManagerRoutingService(PackageManager packageManager) {
    this(PackageManagerRoutingServiceModuleJNI.new_PackageManagerRoutingService(PackageManager.getCPtr(packageManager), packageManager), true);
    PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public String getProfile() {
    return (getClass() == PackageManagerRoutingService.class) ? PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_getProfile(swigCPtr, this) : PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_getProfileSwigExplicitPackageManagerRoutingService(swigCPtr, this);
  }

  public void setProfile(String profile) {
    if (getClass() == PackageManagerRoutingService.class) PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_setProfile(swigCPtr, this, profile); else PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_setProfileSwigExplicitPackageManagerRoutingService(swigCPtr, this, profile);
  }

  public RouteMatchingResult matchRoute(RouteMatchingRequest request) throws java.io.IOException {
    long cPtr = (getClass() == PackageManagerRoutingService.class) ? PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_matchRoute(swigCPtr, this, RouteMatchingRequest.getCPtr(request), request) : PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_matchRouteSwigExplicitPackageManagerRoutingService(swigCPtr, this, RouteMatchingRequest.getCPtr(request), request);
    return (cPtr == 0) ? null : new RouteMatchingResult(cPtr, true);
  }

  public RoutingResult calculateRoute(RoutingRequest request) throws java.io.IOException {
    long cPtr = (getClass() == PackageManagerRoutingService.class) ? PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_calculateRoute(swigCPtr, this, RoutingRequest.getCPtr(request), request) : PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_calculateRouteSwigExplicitPackageManagerRoutingService(swigCPtr, this, RoutingRequest.getCPtr(request), request);
    return (cPtr == 0) ? null : new RoutingResult(cPtr, true);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return PackageManagerRoutingServiceModuleJNI.PackageManagerRoutingService_swigGetDirectorObject(swigCPtr, this);
  }

}
