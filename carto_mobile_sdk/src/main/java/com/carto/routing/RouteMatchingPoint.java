/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.routing;

import com.carto.core.MapPos;

/**
 * A class that defines a route matching result point.
 */
public class RouteMatchingPoint {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public RouteMatchingPoint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(RouteMatchingPoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RouteMatchingPointModuleJNI.delete_RouteMatchingPoint(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof RouteMatchingPoint) {
      return ((RouteMatchingPoint)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Constructs a new RouteMatchingPoint with default values.
 */
  public RouteMatchingPoint() {
    this(RouteMatchingPointModuleJNI.new_RouteMatchingPoint__SWIG_0(), true);
  }

/**
 * Constructs a new RouteMatchingPoint from position, type and edge index.<br>
 * @param pos The position of the point.<br>
 * @param type The type of the matching point.<br>
 * @param edgeIndex The index of the corresponding RouteMatchingEdge instance.
 */
  public RouteMatchingPoint(MapPos pos, RouteMatchingPointType type, int edgeIndex) {
    this(RouteMatchingPointModuleJNI.new_RouteMatchingPoint__SWIG_1(MapPos.getCPtr(pos), pos, type.swigValue(), edgeIndex), true);
  }

/**
 * Returns the position of the matching point.<br>
 * @return The position of the matching point.
 */
  public MapPos getPos() { return new MapPos(RouteMatchingPointModuleJNI.RouteMatchingPoint_getPos(swigCPtr, this), true); }

/**
 * Returns the type of the matching point.<br>
 * @return The type of the matching point.
 */
  public RouteMatchingPointType getType() {
    return RouteMatchingPointType.swigToEnum(RouteMatchingPointModuleJNI.RouteMatchingPoint_getType(swigCPtr, this));
  }

/**
 * Returns the corresponding matching edge index in the matching result.<br>
 * @return The corresponding matching edge index in the matching result.
 */
  public int getEdgeIndex() {
    return RouteMatchingPointModuleJNI.RouteMatchingPoint_getEdgeIndex(swigCPtr, this);
  }

/**
 * Creates a string representation of this object, useful for logging.<br>
 * @return The string representation of this object.
 */
  public String toString() {
    return RouteMatchingPointModuleJNI.RouteMatchingPoint_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return RouteMatchingPointModuleJNI.RouteMatchingPoint_swigGetRawPtr(swigCPtr, this);
  }

}
