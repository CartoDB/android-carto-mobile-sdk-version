/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.routing;

import com.carto.core.Variant;
import com.carto.core.StringVariantMap;

/**
 * A class that defines a route matching result edge.
 */
public class RouteMatchingEdge {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public RouteMatchingEdge(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(RouteMatchingEdge obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RouteMatchingEdgeModuleJNI.delete_RouteMatchingEdge(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof RouteMatchingEdge) {
      return ((RouteMatchingEdge)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Constructs a new RouteMatchingEdge instance with no attributes.
 */
  public RouteMatchingEdge() {
    this(RouteMatchingEdgeModuleJNI.new_RouteMatchingEdge__SWIG_0(), true);
  }

/**
 * Constructs a new RouteMatchingEdge from an attributes map.<br>
 * @param attributes The attributes map.
 */
  public RouteMatchingEdge(StringVariantMap attributes) {
    this(RouteMatchingEdgeModuleJNI.new_RouteMatchingEdge__SWIG_1(StringVariantMap.getCPtr(attributes), attributes), true);
  }

/**
 * Returns true if edge contains the specified attribute.<br>
 * @param name The name of the attribute to check.<br>
 * @return True if the specified attribute exists in the edge.
 */
  public boolean containsAttribute(String name) {
    return RouteMatchingEdgeModuleJNI.RouteMatchingEdge_containsAttribute(swigCPtr, this, name);
  }

/**
 * Returns the value of the specified attribute.<br>
 * @param name The name of the attribute to return.<br>
 * @return The attribute value, if attribute exists. Null variant is returned otherwise.
 */
  public Variant getAttribute(String name) { return new Variant(RouteMatchingEdgeModuleJNI.RouteMatchingEdge_getAttribute(swigCPtr, this, name), true); }

/**
 * Creates a string representation of this object, useful for logging.<br>
 * @return The string representation of this object.
 */
  public String toString() {
    return RouteMatchingEdgeModuleJNI.RouteMatchingEdge_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return RouteMatchingEdgeModuleJNI.RouteMatchingEdge_swigGetRawPtr(swigCPtr, this);
  }

}
