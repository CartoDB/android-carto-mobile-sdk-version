/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.routing;

import com.carto.core.Variant;
import com.carto.geometry.FeatureCollection;
import com.carto.projections.Projection;
import com.carto.routing.RoutingService;
import com.carto.routing.RoutingRequest;
import com.carto.routing.RoutingResult;
import com.carto.routing.RouteMatchingRequest;
import com.carto.routing.RouteMatchingResult;

/** @hidden */
@com.carto.utils.DontObfuscate public class SGREOfflineRoutingServiceModuleJNI {
  public final static native long new_SGREOfflineRoutingService__SWIG_0(long jarg1, Variant jarg1_, long jarg2, Variant jarg2_) throws java.io.IOException;
  public final static native long new_SGREOfflineRoutingService__SWIG_1(long jarg1, Projection jarg1_, long jarg2, FeatureCollection jarg2_, long jarg3, Variant jarg3_) throws java.io.IOException;
  public final static native void delete_SGREOfflineRoutingService(long jarg1);
  public final static native float SGREOfflineRoutingService_getRoutingParameter(long jarg1, SGREOfflineRoutingService jarg1_, String jarg2);
  public final static native void SGREOfflineRoutingService_setRoutingParameter(long jarg1, SGREOfflineRoutingService jarg1_, String jarg2, float jarg3);
  public final static native String SGREOfflineRoutingService_getProfile(long jarg1, SGREOfflineRoutingService jarg1_);
  public final static native String SGREOfflineRoutingService_getProfileSwigExplicitSGREOfflineRoutingService(long jarg1, SGREOfflineRoutingService jarg1_);
  public final static native void SGREOfflineRoutingService_setProfile(long jarg1, SGREOfflineRoutingService jarg1_, String jarg2);
  public final static native void SGREOfflineRoutingService_setProfileSwigExplicitSGREOfflineRoutingService(long jarg1, SGREOfflineRoutingService jarg1_, String jarg2);
  public final static native long SGREOfflineRoutingService_matchRoute(long jarg1, SGREOfflineRoutingService jarg1_, long jarg2, RouteMatchingRequest jarg2_) throws java.io.IOException;
  public final static native long SGREOfflineRoutingService_matchRouteSwigExplicitSGREOfflineRoutingService(long jarg1, SGREOfflineRoutingService jarg1_, long jarg2, RouteMatchingRequest jarg2_) throws java.io.IOException;
  public final static native long SGREOfflineRoutingService_calculateRoute(long jarg1, SGREOfflineRoutingService jarg1_, long jarg2, RoutingRequest jarg2_) throws java.io.IOException;
  public final static native long SGREOfflineRoutingService_calculateRouteSwigExplicitSGREOfflineRoutingService(long jarg1, SGREOfflineRoutingService jarg1_, long jarg2, RoutingRequest jarg2_) throws java.io.IOException;
  public final static native long SGREOfflineRoutingService_swigGetRawPtr(long jarg1, SGREOfflineRoutingService jarg1_);
  public final static native String SGREOfflineRoutingService_swigGetClassName(long jarg1, SGREOfflineRoutingService jarg1_);
  public final static native Object SGREOfflineRoutingService_swigGetDirectorObject(long jarg1, SGREOfflineRoutingService jarg1_);
  public final static native void SGREOfflineRoutingService_director_connect(SGREOfflineRoutingService obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void SGREOfflineRoutingService_change_ownership(SGREOfflineRoutingService obj, long cptr, boolean take_or_release);
  public final static native long SGREOfflineRoutingService_SWIGSmartPtrUpcast(long jarg1);

  public static String SwigDirector_SGREOfflineRoutingService_getProfile(SGREOfflineRoutingService self) {
    return self.getProfile();
  }
  public static void SwigDirector_SGREOfflineRoutingService_setProfile(SGREOfflineRoutingService self, String profile) {
    self.setProfile(profile);
  }
  public static long SwigDirector_SGREOfflineRoutingService_matchRoute(SGREOfflineRoutingService self, long request) throws java.io.IOException {
    return RouteMatchingResult.getCPtr(self.matchRoute(new RouteMatchingRequest(request, true)));
  }
  public static long SwigDirector_SGREOfflineRoutingService_calculateRoute(SGREOfflineRoutingService self, long request) throws java.io.IOException {
    return RoutingResult.getCPtr(self.calculateRoute(new RoutingRequest(request, true)));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
