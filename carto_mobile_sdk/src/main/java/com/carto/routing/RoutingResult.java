/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.routing;

import com.carto.core.MapPos;
import com.carto.core.MapPosVector;
import com.carto.projections.Projection;
import com.carto.routing.RoutingInstruction;
import com.carto.routing.RoutingInstructionVector;

/**
 * A class that defines list of routing actions and path geometry.
 */
public class RoutingResult {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public RoutingResult(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(RoutingResult obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RoutingResultModuleJNI.delete_RoutingResult(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof RoutingResult) {
      return ((RoutingResult)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Constructs a new RoutingResult instance from projection, points and instructions.<br>
 * @param projection The projection of the routing result (same as the request).<br>
 * @param points The point list defining the routing path. Instructions refer to this list.<br>
 * @param instructions The turn-by-turn instruction list.
 */
  public RoutingResult(Projection projection, MapPosVector points, RoutingInstructionVector instructions) {
    this(RoutingResultModuleJNI.new_RoutingResult(Projection.getCPtr(projection), projection, MapPosVector.getCPtr(points), points, RoutingInstructionVector.getCPtr(instructions), instructions), true);
  }

/**
 * Returns the projection of the points in the result.<br>
 * @return The projection of the result.
 */
  public Projection getProjection() {
  long cPtr = RoutingResultModuleJNI.RoutingResult_getProjection(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.projections.Projection.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Returns the point list of the result. The list contains all the points the route must pass in correct order.<br>
 * @return The point list of the path.
 */
  public MapPosVector getPoints() { return new MapPosVector(RoutingResultModuleJNI.RoutingResult_getPoints(swigCPtr, this), true); }

/**
 * Returns the turn-by-turn instruction list.<br>
 * @return The turn-by-turn instruction list.
 */
  public RoutingInstructionVector getInstructions() { return new RoutingInstructionVector(RoutingResultModuleJNI.RoutingResult_getInstructions(swigCPtr, this), true); }

/**
 * Returns the total distance of the path.<br>
 * @return The total distance in meters.
 */
  public double getTotalDistance() {
    return RoutingResultModuleJNI.RoutingResult_getTotalDistance(swigCPtr, this);
  }

/**
 * Returns the approximate total duration of the path.<br>
 * @return The total duration in seconds.
 */
  public double getTotalTime() {
    return RoutingResultModuleJNI.RoutingResult_getTotalTime(swigCPtr, this);
  }

/**
 * Creates a string representation of this result object, useful for logging.<br>
 * @return The string representation of this result object.
 */
  public String toString() {
    return RoutingResultModuleJNI.RoutingResult_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return RoutingResultModuleJNI.RoutingResult_swigGetRawPtr(swigCPtr, this);
  }

}
