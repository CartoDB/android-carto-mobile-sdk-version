/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.routing;

import com.carto.core.MapPos;

/** @hidden */
public class RouteMatchingPointModuleJNI {
  public final static native long new_RouteMatchingPoint__SWIG_0();
  public final static native long new_RouteMatchingPoint__SWIG_1(long jarg1, MapPos jarg1_, int jarg2, int jarg3);
  public final static native void delete_RouteMatchingPoint(long jarg1);
  public final static native long RouteMatchingPoint_getPos(long jarg1, RouteMatchingPoint jarg1_);
  public final static native int RouteMatchingPoint_getType(long jarg1, RouteMatchingPoint jarg1_);
  public final static native int RouteMatchingPoint_getEdgeIndex(long jarg1, RouteMatchingPoint jarg1_);
  public final static native String RouteMatchingPoint_toString(long jarg1, RouteMatchingPoint jarg1_);
  public final static native long RouteMatchingPoint_swigGetRawPtr(long jarg1, RouteMatchingPoint jarg1_);
  public final static native long new_RouteMatchingPointVector__SWIG_0();
  public final static native long new_RouteMatchingPointVector__SWIG_1(long jarg1);
  public final static native long RouteMatchingPointVector_size(long jarg1, RouteMatchingPointVector jarg1_);
  public final static native long RouteMatchingPointVector_capacity(long jarg1, RouteMatchingPointVector jarg1_);
  public final static native void RouteMatchingPointVector_reserve(long jarg1, RouteMatchingPointVector jarg1_, long jarg2);
  public final static native boolean RouteMatchingPointVector_isEmpty(long jarg1, RouteMatchingPointVector jarg1_);
  public final static native void RouteMatchingPointVector_clear(long jarg1, RouteMatchingPointVector jarg1_);
  public final static native void RouteMatchingPointVector_add(long jarg1, RouteMatchingPointVector jarg1_, long jarg2, RouteMatchingPoint jarg2_);
  public final static native long RouteMatchingPointVector_get(long jarg1, RouteMatchingPointVector jarg1_, int jarg2);
  public final static native void RouteMatchingPointVector_set(long jarg1, RouteMatchingPointVector jarg1_, int jarg2, long jarg3, RouteMatchingPoint jarg3_);
  public final static native long RouteMatchingPointVector_swigGetRawPtr(long jarg1, RouteMatchingPointVector jarg1_);
  public final static native void delete_RouteMatchingPointVector(long jarg1);
}
