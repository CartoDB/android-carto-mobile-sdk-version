/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.geocoding;

import com.carto.geocoding.GeocodingService;
import com.carto.geocoding.GeocodingRequest;
import com.carto.geocoding.GeocodingResult;
import com.carto.projections.Projection;

/**
 * An online geocoding service that uses MapBox geocoder.<br>
 * As the class connects to an external (non-CARTO) service, this class is provided "as-is",<br>
 * future changes from the service provider may not be compatible with the implementation.<br>
 * Geocoding and reverse geocoding perform network requests and must be executed in non-UI background thread.<br>
 * Be sure to read the Terms and Conditions of the MapBox service to see if the<br>
 * service is available for your application.<br>
 * Note: this class is experimental and may change or even be removed in future SDK versions.
 */
@com.carto.utils.DontObfuscate public class MapBoxOnlineGeocodingService extends GeocodingService {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public MapBoxOnlineGeocodingService(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(MapBoxOnlineGeocodingService obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MapBoxOnlineGeocodingServiceModuleJNI.delete_MapBoxOnlineGeocodingService(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  /** @hidden */
  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  /** @hidden */
  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_change_ownership(this, swigCPtr, false);
  }

  /** @hidden */
  public void swigTakeOwnership() {
    swigCMemOwn = true;
    MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_change_ownership(this, swigCPtr, true);
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.geocoding.MapBoxOnlineGeocodingService swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.geocoding.MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.geocoding.MapBoxOnlineGeocodingService) director;
    }

    String objClassName = com.carto.geocoding.MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_swigGetClassName(cPtr, null);
    com.carto.geocoding.MapBoxOnlineGeocodingService objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.geocoding." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.geocoding.MapBoxOnlineGeocodingService) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a new instance of the MapBoxOnlineGeocodingService given API key.<br>
 * @param accessToken The access token to use (registered with MapBox).
 */
  public MapBoxOnlineGeocodingService(String accessToken) {
    this(MapBoxOnlineGeocodingServiceModuleJNI.new_MapBoxOnlineGeocodingService(accessToken), true);
    MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

/**
 * Returns the custom backend service URL.<br>
 * @return The custom backend service URL. If this is not defined, an empty string is returned.
 */
  public String getCustomServiceURL() {
    return MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_getCustomServiceURL(swigCPtr, this);
  }

/**
 * Sets the custom backend service URL. <br>
 * The custom URL should contain tags "{query}" and "{access_token}" that will be substituted by the SDK.<br>
 * @param serviceURL The custom backend service URL to use. If this is empty, then the default service is used.
 */
  public void setCustomServiceURL(String serviceURL) {
    MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_setCustomServiceURL(swigCPtr, this, serviceURL);
  }

  public boolean isAutocomplete() {
    return (getClass() == MapBoxOnlineGeocodingService.class) ? MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_isAutocomplete(swigCPtr, this) : MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_isAutocompleteSwigExplicitMapBoxOnlineGeocodingService(swigCPtr, this);
  }

  public void setAutocomplete(boolean autocomplete) {
    if (getClass() == MapBoxOnlineGeocodingService.class) MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_setAutocomplete(swigCPtr, this, autocomplete); else MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_setAutocompleteSwigExplicitMapBoxOnlineGeocodingService(swigCPtr, this, autocomplete);
  }

  public String getLanguage() {
    return (getClass() == MapBoxOnlineGeocodingService.class) ? MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_getLanguage(swigCPtr, this) : MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_getLanguageSwigExplicitMapBoxOnlineGeocodingService(swigCPtr, this);
  }

  public void setLanguage(String lang) {
    if (getClass() == MapBoxOnlineGeocodingService.class) MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_setLanguage(swigCPtr, this, lang); else MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_setLanguageSwigExplicitMapBoxOnlineGeocodingService(swigCPtr, this, lang);
  }

  public int getMaxResults() {
    return (getClass() == MapBoxOnlineGeocodingService.class) ? MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_getMaxResults(swigCPtr, this) : MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_getMaxResultsSwigExplicitMapBoxOnlineGeocodingService(swigCPtr, this);
  }

  public void setMaxResults(int maxResults) {
    if (getClass() == MapBoxOnlineGeocodingService.class) MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_setMaxResults(swigCPtr, this, maxResults); else MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_setMaxResultsSwigExplicitMapBoxOnlineGeocodingService(swigCPtr, this, maxResults);
  }

  public GeocodingResultVector calculateAddresses(GeocodingRequest request) throws java.io.IOException {
    return new GeocodingResultVector((getClass() == MapBoxOnlineGeocodingService.class) ? MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_calculateAddresses(swigCPtr, this, GeocodingRequest.getCPtr(request), request) : MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_calculateAddressesSwigExplicitMapBoxOnlineGeocodingService(swigCPtr, this, GeocodingRequest.getCPtr(request), request), true);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return MapBoxOnlineGeocodingServiceModuleJNI.MapBoxOnlineGeocodingService_swigGetDirectorObject(swigCPtr, this);
  }

}
