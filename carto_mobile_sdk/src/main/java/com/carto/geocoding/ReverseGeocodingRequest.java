/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.geocoding;

import com.carto.core.MapPos;
import com.carto.core.Variant;
import com.carto.projections.Projection;

/**
 * A reverse geocoding request describing search location.
 */
public class ReverseGeocodingRequest {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public ReverseGeocodingRequest(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(ReverseGeocodingRequest obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ReverseGeocodingRequestModuleJNI.delete_ReverseGeocodingRequest(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof ReverseGeocodingRequest) {
      return ((ReverseGeocodingRequest)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Constructs a new ReverseGeocodingRequest object from a projection and location.<br>
 * @param projection The projection to use for the result and location data.<br>
 * @param location The location of the query.
 */
  public ReverseGeocodingRequest(Projection projection, MapPos location) {
    this(ReverseGeocodingRequestModuleJNI.new_ReverseGeocodingRequest(Projection.getCPtr(projection), projection, MapPos.getCPtr(location), location), true);
  }

/**
 * Returns the location of the query.<br>
 * @return The location of the query.
 */
  public MapPos getLocation() { return new MapPos(ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_getLocation(swigCPtr, this), true); }

/**
 * Returns the search radius (in meters).<br>
 * @return The search radius in meters.
 */
  public float getSearchRadius() {
    return ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_getSearchRadius(swigCPtr, this);
  }

/**
 * Sets the search radius (in meters).<br>
 * The default search radius is 100 meters.<br>
 * @param radius The new search radius in meters.
 */
  public void setSearchRadius(float radius) {
    ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_setSearchRadius(swigCPtr, this, radius);
  }

/**
 * Returns the projection of the query.<br>
 * @return The projection of the query.
 */
  public Projection getProjection() {
  long cPtr = ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_getProjection(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.projections.Projection.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Returns the custom parameter value of the request.<br>
 * @param param The name of the parameter to return.<br>
 * @return The value of the parameter. If the parameter does not exist, empty variant is returned.
 */
  public Variant getCustomParameter(String param) { return new Variant(ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_getCustomParameter(swigCPtr, this, param), true); }

/**
 * Sets a custom parameter value for the the request.<br>
 * @param param The name of the parameter.<br>
 * @param value The new value for the parameter.
 */
  public void setCustomParameter(String param, Variant value) {
    ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_setCustomParameter(swigCPtr, this, param, Variant.getCPtr(value), value);
  }

/**
 * Creates a string representation of this request object, useful for logging.<br>
 * @return The string representation of this request object.
 */
  public String toString() {
    return ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return ReverseGeocodingRequestModuleJNI.ReverseGeocodingRequest_swigGetRawPtr(swigCPtr, this);
  }

}
