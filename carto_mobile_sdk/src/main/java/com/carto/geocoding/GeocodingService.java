/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.geocoding;

import com.carto.geocoding.GeocodingRequest;
import com.carto.geocoding.GeocodingResult;

/**
 * An abstract base class for geocoding services.
 */
@com.carto.utils.DontObfuscate public class GeocodingService {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public GeocodingService(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(GeocodingService obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GeocodingServiceModuleJNI.delete_GeocodingService(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /** @hidden */
  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  /** @hidden */
  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    GeocodingServiceModuleJNI.GeocodingService_change_ownership(this, swigCPtr, false);
  }

  /** @hidden */
  public void swigTakeOwnership() {
    swigCMemOwn = true;
    GeocodingServiceModuleJNI.GeocodingService_change_ownership(this, swigCPtr, true);
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.geocoding.GeocodingService swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.geocoding.GeocodingServiceModuleJNI.GeocodingService_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.geocoding.GeocodingService) director;
    }

    String objClassName = com.carto.geocoding.GeocodingServiceModuleJNI.GeocodingService_swigGetClassName(cPtr, null);
    com.carto.geocoding.GeocodingService objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.geocoding." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.geocoding.GeocodingService) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Returns the autocomplete flag of the service.<br>
 * @return The autocomplete flag of the service.
 */
  public boolean isAutocomplete() {
    return GeocodingServiceModuleJNI.GeocodingService_isAutocomplete(swigCPtr, this);
  }

/**
 * Sets the autocomplete flag of the service.<br>
 * By default this flag is off.<br>
 * @param autocomplete The new value for autocomplete flag.
 */
  public void setAutocomplete(boolean autocomplete) {
    GeocodingServiceModuleJNI.GeocodingService_setAutocomplete(swigCPtr, this, autocomplete);
  }

/**
 * Returns the language of the expected results.<br>
 * @return The language of the expected results. As ISO 639-1 code or empty string.
 */
  public String getLanguage() {
    return GeocodingServiceModuleJNI.GeocodingService_getLanguage(swigCPtr, this);
  }

/**
 * Sets the language of the expected results.<br>
 * @param lang The language to use as ISO 639-1 code. Empty string can be used for default language.
 */
  public void setLanguage(String lang) {
    GeocodingServiceModuleJNI.GeocodingService_setLanguage(swigCPtr, this, lang);
  }

/**
 * Returns the maximum number of results the geocoding service returns.<br>
 * @return The maximum number of results the geocoding service returns.
 */
  public int getMaxResults() {
    return GeocodingServiceModuleJNI.GeocodingService_getMaxResults(swigCPtr, this);
  }

/**
 * Sets the maximum number of results the geocoding service returns.<br>
 * The default number of results is service dependant (normally 10).<br>
 * @param maxResults The new maximum number of results the geocoding service returns.
 */
  public void setMaxResults(int maxResults) {
    GeocodingServiceModuleJNI.GeocodingService_setMaxResults(swigCPtr, this, maxResults);
  }

/**
 * Calculates matching addresses from the specified geocoding request.<br>
 * @param request The geocoding request to use.<br>
 * @return The list of matching geocoding results, sorted by descending ranks.<br>
 * @throws java.lang.Exception If IO error occured during the calculation.
 */
  public GeocodingResultVector calculateAddresses(GeocodingRequest request) throws java.io.IOException {
    return new GeocodingResultVector(GeocodingServiceModuleJNI.GeocodingService_calculateAddresses(swigCPtr, this, GeocodingRequest.getCPtr(request), request), true);
  }

/**
 * The default constructor.
 */
  protected GeocodingService() {
    this(GeocodingServiceModuleJNI.new_GeocodingService(), true);
    GeocodingServiceModuleJNI.GeocodingService_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return GeocodingServiceModuleJNI.GeocodingService_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return GeocodingServiceModuleJNI.GeocodingService_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return GeocodingServiceModuleJNI.GeocodingService_swigGetDirectorObject(swigCPtr, this);
  }

}
