/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.geocoding;

import com.carto.geocoding.ReverseGeocodingService;
import com.carto.geocoding.ReverseGeocodingRequest;
import com.carto.geocoding.GeocodingResult;
import com.carto.projections.Projection;

/** @hidden */
@com.carto.utils.DontObfuscate public class OSMOfflineReverseGeocodingServiceModuleJNI {
  public final static native long new_OSMOfflineReverseGeocodingService(String jarg1) throws java.io.IOException;
  public final static native void delete_OSMOfflineReverseGeocodingService(long jarg1);
  public final static native String OSMOfflineReverseGeocodingService_getLanguage(long jarg1, OSMOfflineReverseGeocodingService jarg1_);
  public final static native String OSMOfflineReverseGeocodingService_getLanguageSwigExplicitOSMOfflineReverseGeocodingService(long jarg1, OSMOfflineReverseGeocodingService jarg1_);
  public final static native void OSMOfflineReverseGeocodingService_setLanguage(long jarg1, OSMOfflineReverseGeocodingService jarg1_, String jarg2);
  public final static native void OSMOfflineReverseGeocodingService_setLanguageSwigExplicitOSMOfflineReverseGeocodingService(long jarg1, OSMOfflineReverseGeocodingService jarg1_, String jarg2);
  public final static native long OSMOfflineReverseGeocodingService_calculateAddresses(long jarg1, OSMOfflineReverseGeocodingService jarg1_, long jarg2, ReverseGeocodingRequest jarg2_) throws java.io.IOException;
  public final static native long OSMOfflineReverseGeocodingService_calculateAddressesSwigExplicitOSMOfflineReverseGeocodingService(long jarg1, OSMOfflineReverseGeocodingService jarg1_, long jarg2, ReverseGeocodingRequest jarg2_) throws java.io.IOException;
  public final static native long OSMOfflineReverseGeocodingService_swigGetRawPtr(long jarg1, OSMOfflineReverseGeocodingService jarg1_);
  public final static native String OSMOfflineReverseGeocodingService_swigGetClassName(long jarg1, OSMOfflineReverseGeocodingService jarg1_);
  public final static native Object OSMOfflineReverseGeocodingService_swigGetDirectorObject(long jarg1, OSMOfflineReverseGeocodingService jarg1_);
  public final static native void OSMOfflineReverseGeocodingService_director_connect(OSMOfflineReverseGeocodingService obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OSMOfflineReverseGeocodingService_change_ownership(OSMOfflineReverseGeocodingService obj, long cptr, boolean take_or_release);
  public final static native long OSMOfflineReverseGeocodingService_SWIGSmartPtrUpcast(long jarg1);

  public static String SwigDirector_OSMOfflineReverseGeocodingService_getLanguage(OSMOfflineReverseGeocodingService self) {
    return self.getLanguage();
  }
  public static void SwigDirector_OSMOfflineReverseGeocodingService_setLanguage(OSMOfflineReverseGeocodingService self, String lang) {
    self.setLanguage(lang);
  }
  public static long SwigDirector_OSMOfflineReverseGeocodingService_calculateAddresses(OSMOfflineReverseGeocodingService self, long request) throws java.io.IOException {
    return GeocodingResultVector.getCPtr(self.calculateAddresses(new ReverseGeocodingRequest(request, true)));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
