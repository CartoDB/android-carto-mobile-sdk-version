/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.geocoding;

import com.carto.geocoding.GeocodingService;
import com.carto.geocoding.GeocodingRequest;
import com.carto.geocoding.GeocodingResult;
import com.carto.projections.Projection;

/** @hidden */
@com.carto.utils.DontObfuscate public class OSMOfflineGeocodingServiceModuleJNI {
  public final static native long new_OSMOfflineGeocodingService(String jarg1) throws java.io.IOException;
  public final static native void delete_OSMOfflineGeocodingService(long jarg1);
  public final static native boolean OSMOfflineGeocodingService_isAutocomplete(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native boolean OSMOfflineGeocodingService_isAutocompleteSwigExplicitOSMOfflineGeocodingService(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native void OSMOfflineGeocodingService_setAutocomplete(long jarg1, OSMOfflineGeocodingService jarg1_, boolean jarg2);
  public final static native void OSMOfflineGeocodingService_setAutocompleteSwigExplicitOSMOfflineGeocodingService(long jarg1, OSMOfflineGeocodingService jarg1_, boolean jarg2);
  public final static native String OSMOfflineGeocodingService_getLanguage(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native String OSMOfflineGeocodingService_getLanguageSwigExplicitOSMOfflineGeocodingService(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native void OSMOfflineGeocodingService_setLanguage(long jarg1, OSMOfflineGeocodingService jarg1_, String jarg2);
  public final static native void OSMOfflineGeocodingService_setLanguageSwigExplicitOSMOfflineGeocodingService(long jarg1, OSMOfflineGeocodingService jarg1_, String jarg2);
  public final static native int OSMOfflineGeocodingService_getMaxResults(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native int OSMOfflineGeocodingService_getMaxResultsSwigExplicitOSMOfflineGeocodingService(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native void OSMOfflineGeocodingService_setMaxResults(long jarg1, OSMOfflineGeocodingService jarg1_, int jarg2);
  public final static native void OSMOfflineGeocodingService_setMaxResultsSwigExplicitOSMOfflineGeocodingService(long jarg1, OSMOfflineGeocodingService jarg1_, int jarg2);
  public final static native long OSMOfflineGeocodingService_calculateAddresses(long jarg1, OSMOfflineGeocodingService jarg1_, long jarg2, GeocodingRequest jarg2_) throws java.io.IOException;
  public final static native long OSMOfflineGeocodingService_calculateAddressesSwigExplicitOSMOfflineGeocodingService(long jarg1, OSMOfflineGeocodingService jarg1_, long jarg2, GeocodingRequest jarg2_) throws java.io.IOException;
  public final static native long OSMOfflineGeocodingService_swigGetRawPtr(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native String OSMOfflineGeocodingService_swigGetClassName(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native Object OSMOfflineGeocodingService_swigGetDirectorObject(long jarg1, OSMOfflineGeocodingService jarg1_);
  public final static native void OSMOfflineGeocodingService_director_connect(OSMOfflineGeocodingService obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OSMOfflineGeocodingService_change_ownership(OSMOfflineGeocodingService obj, long cptr, boolean take_or_release);
  public final static native long OSMOfflineGeocodingService_SWIGSmartPtrUpcast(long jarg1);

  public static boolean SwigDirector_OSMOfflineGeocodingService_isAutocomplete(OSMOfflineGeocodingService self) {
    return self.isAutocomplete();
  }
  public static void SwigDirector_OSMOfflineGeocodingService_setAutocomplete(OSMOfflineGeocodingService self, boolean autocomplete) {
    self.setAutocomplete(autocomplete);
  }
  public static String SwigDirector_OSMOfflineGeocodingService_getLanguage(OSMOfflineGeocodingService self) {
    return self.getLanguage();
  }
  public static void SwigDirector_OSMOfflineGeocodingService_setLanguage(OSMOfflineGeocodingService self, String lang) {
    self.setLanguage(lang);
  }
  public static int SwigDirector_OSMOfflineGeocodingService_getMaxResults(OSMOfflineGeocodingService self) {
    return self.getMaxResults();
  }
  public static void SwigDirector_OSMOfflineGeocodingService_setMaxResults(OSMOfflineGeocodingService self, int maxResults) {
    self.setMaxResults(maxResults);
  }
  public static long SwigDirector_OSMOfflineGeocodingService_calculateAddresses(OSMOfflineGeocodingService self, long request) throws java.io.IOException {
    return GeocodingResultVector.getCPtr(self.calculateAddresses(new GeocodingRequest(request, true)));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
