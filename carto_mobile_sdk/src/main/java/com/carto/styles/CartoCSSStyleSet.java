/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.styles;

import com.carto.utils.AssetPackage;

/**
 * CartoCSS style definition for vector tiles. Style sets contain optional asset package,<br>
 * fonts and other resources can be loaded from the asset package.
 */
public class CartoCSSStyleSet {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public CartoCSSStyleSet(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(CartoCSSStyleSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CartoCSSStyleSetModuleJNI.delete_CartoCSSStyleSet(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof CartoCSSStyleSet) {
      return ((CartoCSSStyleSet)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Constructs a style from CartoCSS string.<br>
 * @param cartoCSS The CartoCSS string defining point styling.
 */
  public CartoCSSStyleSet(String cartoCSS) {
    this(CartoCSSStyleSetModuleJNI.new_CartoCSSStyleSet__SWIG_0(cartoCSS), true);
  }

/**
 * Constructs a style from CartoCSS string and asset data.<br>
 * @param cartoCSS The CartoCSS string defining point styling.<br>
 * @param assetPackage The optional asset package for the style. Can be null if CartoCSS does not use any local assets.
 */
  public CartoCSSStyleSet(String cartoCSS, AssetPackage assetPackage) {
    this(CartoCSSStyleSetModuleJNI.new_CartoCSSStyleSet__SWIG_1(cartoCSS, AssetPackage.getCPtr(assetPackage), assetPackage), true);
  }

/**
 * Returns the CartoCSS string used for the style.<br>
 * @return The CartoCSS string used for the style.
 */
  public String getCartoCSS() {
    return CartoCSSStyleSetModuleJNI.CartoCSSStyleSet_getCartoCSS(swigCPtr, this);
  }

/**
 * Returns the style asset package.<br>
 * @return The style asset package.
 */
  public AssetPackage getAssetPackage() {
  long cPtr = CartoCSSStyleSetModuleJNI.CartoCSSStyleSet_getAssetPackage(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.utils.AssetPackage.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return CartoCSSStyleSetModuleJNI.CartoCSSStyleSet_swigGetRawPtr(swigCPtr, this);
  }

}
