/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.styles;

import com.carto.graphics.Bitmap;
import com.carto.styles.PointStyle;
import com.carto.styles.StyleBuilder;

/**
 * A builder class for PointStyle.
 */
@com.carto.utils.DontObfuscate public class PointStyleBuilder extends StyleBuilder {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public PointStyleBuilder(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(PointStyleBuilder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        PointStyleBuilderModuleJNI.delete_PointStyleBuilder(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.styles.PointStyleBuilder swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.styles.PointStyleBuilderModuleJNI.PointStyleBuilder_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.styles.PointStyleBuilder) director;
    }

    String objClassName = com.carto.styles.PointStyleBuilderModuleJNI.PointStyleBuilder_swigGetClassName(cPtr, null);
    com.carto.styles.PointStyleBuilder objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.styles." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.styles.PointStyleBuilder) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a PointStyleBuilder object with all parameters set to defaults.
 */
  public PointStyleBuilder() {
    this(PointStyleBuilderModuleJNI.new_PointStyleBuilder(), true);
  }

/**
 * Returns the bitmap of the point.<br>
 * @return The bitmap of the point.
 */
  public Bitmap getBitmap() {
    long cPtr = PointStyleBuilderModuleJNI.PointStyleBuilder_getBitmap(swigCPtr, this);
    return (cPtr == 0) ? null : new Bitmap(cPtr, true);
  }

/**
 * Sets the bitmap that will be used for drawing the point. The default is "default_point.png".<br>
 * @param bitmap The new bitmap for the point.
 */
  public void setBitmap(Bitmap bitmap) {
    PointStyleBuilderModuleJNI.PointStyleBuilder_setBitmap(swigCPtr, this, Bitmap.getCPtr(bitmap), bitmap);
  }

/**
 * Returns the size of the point used for click detection.<br>
 * @return The size of the point used for click detection.
 */
  public float getClickSize() {
    return PointStyleBuilderModuleJNI.PointStyleBuilder_getClickSize(swigCPtr, this);
  }

/**
 * Sets the size for the point that will be used for click detection.<br>
 * Units are screen density independent pixels (DP or DIP). If set to -1 the click size will be<br>
 * calculated automatically. The default is -1.<br>
 * @param size The new point size in dp.
 */
  public void setClickSize(float size) {
    PointStyleBuilderModuleJNI.PointStyleBuilder_setClickSize(swigCPtr, this, size);
  }

/**
 * Returns the size of the point.<br>
 * @return The size of the point.
 */
  public float getSize() {
    return PointStyleBuilderModuleJNI.PointStyleBuilder_getSize(swigCPtr, this);
  }

/**
 * Sets the size for the point in screen density independent pixels (DP or DIP). The default is 20.<br>
 * @param size The new point size in dp.
 */
  public void setSize(float size) {
    PointStyleBuilderModuleJNI.PointStyleBuilder_setSize(swigCPtr, this, size);
  }

/**
 * Builds a new instance of the PointStyle object using previously set parameters.<br>
 * @return A new PointStyle object.
 */
  public PointStyle buildStyle() {
  long cPtr = PointStyleBuilderModuleJNI.PointStyleBuilder_buildStyle(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.styles.PointStyle.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return PointStyleBuilderModuleJNI.PointStyleBuilder_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return PointStyleBuilderModuleJNI.PointStyleBuilder_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return PointStyleBuilderModuleJNI.PointStyleBuilder_swigGetDirectorObject(swigCPtr, this);
  }

}
