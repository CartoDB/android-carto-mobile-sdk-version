/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.vectorelements;

import com.carto.geometry.MultiGeometry;
import com.carto.styles.GeometryCollectionStyle;
import com.carto.vectorelements.VectorElement;

/**
 * A collection of multiple geometries that can be displayed on the map.
 */
@com.carto.utils.DontObfuscate public class GeometryCollection extends VectorElement {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public GeometryCollection(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(GeometryCollection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GeometryCollectionModuleJNI.delete_GeometryCollection(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.vectorelements.GeometryCollection swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.vectorelements.GeometryCollectionModuleJNI.GeometryCollection_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.vectorelements.GeometryCollection) director;
    }

    String objClassName = com.carto.vectorelements.GeometryCollectionModuleJNI.GeometryCollection_swigGetClassName(cPtr, null);
    com.carto.vectorelements.GeometryCollection objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.vectorelements." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.vectorelements.GeometryCollection) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a new GeometryCollection object from multigeometry and style.<br>
 * @param geometry The multigeometry containing possibly points, lines, polygons.<br>
 * @param style The style defining multigeometry rendering.
 */
  public GeometryCollection(MultiGeometry geometry, GeometryCollectionStyle style) {
    this(GeometryCollectionModuleJNI.new_GeometryCollection(MultiGeometry.getCPtr(geometry), geometry, GeometryCollectionStyle.getCPtr(style), style), true);
  }

  public MultiGeometry getGeometry() {
  long cPtr = GeometryCollectionModuleJNI.GeometryCollection_getGeometry(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.geometry.MultiGeometry.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Sets the geometry for this geometry collection.<br>
 * @param geometry The new geometry object.
 */
  public void setGeometry(MultiGeometry geometry) {
    GeometryCollectionModuleJNI.GeometryCollection_setGeometry(swigCPtr, this, MultiGeometry.getCPtr(geometry), geometry);
  }

/**
 * Returns the style of this geometry collection.<br>
 * @return The style that defines multigeometry rendering.
 */
  public GeometryCollectionStyle getStyle() {
  long cPtr = GeometryCollectionModuleJNI.GeometryCollection_getStyle(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.styles.GeometryCollectionStyle.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Sets the style for this geometry collection.<br>
 * @param style The new style that defines defines multigeometry rendering.
 */
  public void setStyle(GeometryCollectionStyle style) {
    GeometryCollectionModuleJNI.GeometryCollection_setStyle(swigCPtr, this, GeometryCollectionStyle.getCPtr(style), style);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return GeometryCollectionModuleJNI.GeometryCollection_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return GeometryCollectionModuleJNI.GeometryCollection_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return GeometryCollectionModuleJNI.GeometryCollection_swigGetDirectorObject(swigCPtr, this);
  }

}
