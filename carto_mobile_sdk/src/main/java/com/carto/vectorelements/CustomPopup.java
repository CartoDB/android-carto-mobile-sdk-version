/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.vectorelements;

import com.carto.core.MapPos;
import com.carto.core.ScreenPos;
import com.carto.graphics.Bitmap;
import com.carto.geometry.Geometry;
import com.carto.geometry.PointGeometry;
import com.carto.styles.PopupStyle;
import com.carto.ui.ClickInfo;
import com.carto.ui.PopupDrawInfo;
import com.carto.ui.PopupClickInfo;
import com.carto.vectorelements.Billboard;
import com.carto.vectorelements.CustomPopupHandler;
import com.carto.ui.ClickType;

/**
 * A popup with user defined handler. The handler is responsible<br>
 * for drawing the bitmap for the popup and can also respond to<br>
 * touch event.
 */
@com.carto.utils.DontObfuscate public class CustomPopup extends Popup {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public CustomPopup(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(CustomPopup obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CustomPopupModuleJNI.delete_CustomPopup(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.vectorelements.CustomPopup swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.vectorelements.CustomPopupModuleJNI.CustomPopup_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.vectorelements.CustomPopup) director;
    }

    String objClassName = com.carto.vectorelements.CustomPopupModuleJNI.CustomPopup_swigGetClassName(cPtr, null);
    com.carto.vectorelements.CustomPopup objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.vectorelements." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.vectorelements.CustomPopup) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a CustomPopup object with the specified style and attaches it to a billboard element.<br>
 * @param baseBillboard The billboard this popup will be attached to.<br>
 * @param style The style that defines what this popup looks like.<br>
 * @param popupHandler The handler to use for the popup.
 */
  public CustomPopup(Billboard baseBillboard, PopupStyle style, CustomPopupHandler popupHandler) {
    this(CustomPopupModuleJNI.new_CustomPopup__SWIG_0(Billboard.getCPtr(baseBillboard), baseBillboard, PopupStyle.getCPtr(style), style, CustomPopupHandler.getCPtr(popupHandler), popupHandler), true);
  }

/**
 * Constructs a CustomPopup object from a geometry object and a style.<br>
 * @param geometry The geometry object that defines the location of this popup.<br>
 * @param style The style that defines what this popup looks like.<br>
 * @param popupHandler The handler to use for the popup.
 */
  public CustomPopup(Geometry geometry, PopupStyle style, CustomPopupHandler popupHandler) {
    this(CustomPopupModuleJNI.new_CustomPopup__SWIG_1(Geometry.getCPtr(geometry), geometry, PopupStyle.getCPtr(style), style, CustomPopupHandler.getCPtr(popupHandler), popupHandler), true);
  }

/**
 * Constructs a CustomPopup object from a map position and a style.<br>
 * @param pos The map position that defines the location of this popup.<br>
 * @param style The style that defines what this popup looks like.<br>
 * @param popupHandler The handler to use for the popup.
 */
  public CustomPopup(MapPos pos, PopupStyle style, CustomPopupHandler popupHandler) {
    this(CustomPopupModuleJNI.new_CustomPopup__SWIG_2(MapPos.getCPtr(pos), pos, PopupStyle.getCPtr(style), style, CustomPopupHandler.getCPtr(popupHandler), popupHandler), true);
  }

/**
 * Returns the handler used for the popup.<br>
 * @return The popup handler responsible for drawing the popup and handling click events.
 */
  public CustomPopupHandler getPopupHandler() {
  long cPtr = CustomPopupModuleJNI.CustomPopup_getPopupHandler(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.vectorelements.CustomPopupHandler.swigCreatePolymorphicInstance(cPtr, true);
}

  public boolean processClick(ClickInfo clickInfo, MapPos clickPos, ScreenPos elementClickPos) {
    return CustomPopupModuleJNI.CustomPopup_processClick(swigCPtr, this, ClickInfo.getCPtr(clickInfo), clickInfo, MapPos.getCPtr(clickPos), clickPos, ScreenPos.getCPtr(elementClickPos), elementClickPos);
  }

  public Bitmap drawBitmap(ScreenPos anchorScreenPos, float screenWidth, float screenHeight, float dpToPX) {
    long cPtr = CustomPopupModuleJNI.CustomPopup_drawBitmap(swigCPtr, this, ScreenPos.getCPtr(anchorScreenPos), anchorScreenPos, screenWidth, screenHeight, dpToPX);
    return (cPtr == 0) ? null : new Bitmap(cPtr, true);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return CustomPopupModuleJNI.CustomPopup_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return CustomPopupModuleJNI.CustomPopup_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return CustomPopupModuleJNI.CustomPopup_swigGetDirectorObject(swigCPtr, this);
  }

}
