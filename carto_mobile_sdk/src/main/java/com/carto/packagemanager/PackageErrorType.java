/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.packagemanager;

/**
 * Possible error types for failed package downloads.
 */
public enum PackageErrorType {
/**
 * Internal or system error.
 */
  PACKAGE_ERROR_TYPE_SYSTEM,
/**
 * Connection or network error.
 */
  PACKAGE_ERROR_TYPE_CONNECTION,
/**
 * The number of downloaded packages exceeded subscription limit.
 */
  PACKAGE_ERROR_TYPE_DOWNLOAD_LIMIT_EXCEEDED,
/**
 * The bounding box of the package contains too many tiles.<br>
 * This error is only returned for custom bounding box packages.
 */
  PACKAGE_ERROR_TYPE_PACKAGE_TOO_BIG,
/**
 * The license does not allow downloading offline packages.
 */
  PACKAGE_ERROR_TYPE_NO_OFFLINE_PLAN;

  public final int swigValue() {
    return swigValue;
  }

  public static PackageErrorType swigToEnum(int swigValue) {
    PackageErrorType[] swigValues = PackageErrorType.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (PackageErrorType swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + PackageErrorType.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private PackageErrorType() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private PackageErrorType(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private PackageErrorType(PackageErrorType swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

