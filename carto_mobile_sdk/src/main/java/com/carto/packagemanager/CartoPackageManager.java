/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.packagemanager;

import com.carto.packagemanager.PackageManager;
import com.carto.layers.CartoVectorTileLayer;
import com.carto.utils.AssetPackage;
import com.carto.layers.CartoBaseMapStyle;

/**
 * Offline map package manager that uses Carto online service for map package downloads.<br>
 * After packages are downloaded, they can be used offline without any connection to the server.
 */
@com.carto.utils.DontObfuscate public class CartoPackageManager extends PackageManager {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public CartoPackageManager(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(CartoPackageManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CartoPackageManagerModuleJNI.delete_CartoPackageManager(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.packagemanager.CartoPackageManager swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.packagemanager.CartoPackageManagerModuleJNI.CartoPackageManager_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.packagemanager.CartoPackageManager) director;
    }

    String objClassName = com.carto.packagemanager.CartoPackageManagerModuleJNI.CartoPackageManager_swigGetClassName(cPtr, null);
    com.carto.packagemanager.CartoPackageManager objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.packagemanager." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.packagemanager.CartoPackageManager) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a CartoPackageManager object, given application context and data folder.<br>
 * The data folder must exist before creating a new package manager and it is assumed to be persistent.<br>
 * Note: the package manager must be explicitly started using start() method!<br>
 * @param source Name of the package source. The official source is "carto.streets".<br>
 * @param dataFolder The folder where downloaded packages are kept. It must exist and must be writable.<br>
 * @throws java.lang.Exception If package manager fails to open or create package database.
 */
  public CartoPackageManager(String source, String dataFolder) throws java.io.IOException {
    this(CartoPackageManagerModuleJNI.new_CartoPackageManager(source, dataFolder), true);
  }

/**
 * Returns the specified style asset package.<br>
 * @param style The style of the asset package to return.
 */
  public AssetPackage getStyleAssetPackage(CartoBaseMapStyle style) {
  long cPtr = CartoPackageManagerModuleJNI.CartoPackageManager_getStyleAssetPackage(swigCPtr, this, style.swigValue());
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.utils.AssetPackage.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Starts updating the specified map style asynchronously. When this task finishes, listener is called.<br>
 * @return True if the style will be downloaded and listener will be notified (if set). False if it can not be downloaded.
 */
  public boolean startStyleDownload(CartoBaseMapStyle style) {
    return CartoPackageManagerModuleJNI.CartoPackageManager_startStyleDownload(swigCPtr, this, style.swigValue());
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return CartoPackageManagerModuleJNI.CartoPackageManager_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return CartoPackageManagerModuleJNI.CartoPackageManager_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return CartoPackageManagerModuleJNI.CartoPackageManager_swigGetDirectorObject(swigCPtr, this);
  }

}
