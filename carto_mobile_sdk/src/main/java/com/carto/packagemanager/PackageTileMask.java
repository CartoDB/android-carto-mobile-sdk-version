/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.packagemanager;

import com.carto.core.MapTile;
import com.carto.geometry.MultiPolygonGeometry;
import com.carto.projections.Projection;

/**
 * Tile mask contains map package spatial coverage information and<br>
 * can be used for very fast 'tile in package' tests.
 */
public class PackageTileMask {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public PackageTileMask(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(PackageTileMask obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        PackageTileMaskModuleJNI.delete_PackageTileMask(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof PackageTileMask) {
      return ((PackageTileMask)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Returns the encoded tile mask value. This should not be displayed to the user.<br>
 * @return The tile mask of the package.
 */
  public String getStringValue() {
    return PackageTileMaskModuleJNI.PackageTileMask_getStringValue(swigCPtr, this);
  }

/**
 * Returns maximum zoom level encoded in this tilemask.<br>
 * @return The maximum zoom level encoded in this tilemask.
 */
  public int getMaxZoomLevel() {
    return PackageTileMaskModuleJNI.PackageTileMask_getMaxZoomLevel(swigCPtr, this);
  }

/**
 * Returns the bounding polygon of the tilemask.<br>
 * @param projection The projection to use.<br>
 * @return The bounding polygon of the tilemask area.
 */
  public MultiPolygonGeometry getBoundingPolygon(Projection projection) {
  long cPtr = PackageTileMaskModuleJNI.PackageTileMask_getBoundingPolygon(swigCPtr, this, Projection.getCPtr(projection), projection);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.geometry.MultiPolygonGeometry.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Returns the status of the specified tile. This method can be used for fast testing whether a tile is part of the package.<br>
 * @param tile The tile to check.<br>
 * @return The status of the specified tile.
 */
  public PackageTileStatus getTileStatus(MapTile tile) {
    return PackageTileStatus.swigToEnum(PackageTileMaskModuleJNI.PackageTileMask_getTileStatus(swigCPtr, this, MapTile.getCPtr(tile), tile));
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return PackageTileMaskModuleJNI.PackageTileMask_swigGetRawPtr(swigCPtr, this);
  }

}
