/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.packagemanager;

/**
 * The status of the map package. This includes information whether the package is ready, queued for processing, downloading, etc.<br>
 * Also it contains information if the package processing is paused and about the progress.
 */
public class PackageStatus {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public PackageStatus(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(PackageStatus obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        PackageStatusModuleJNI.delete_PackageStatus(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof PackageStatus) {
      return ((PackageStatus)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Constructs a new status.<br>
 * @param currentAction The current action being performed with the package.<br>
 * @param paused True if the action is paused.<br>
 * @param progress The progress of the operation (in the range 0..100)
 */
  public PackageStatus(PackageAction currentAction, boolean paused, float progress) {
    this(PackageStatusModuleJNI.new_PackageStatus(currentAction.swigValue(), paused, progress), true);
  }

/**
 * Returns the current action being performed.<br>
 * @return The current action being performed.
 */
  public PackageAction getCurrentAction() {
    return PackageAction.swigToEnum(PackageStatusModuleJNI.PackageStatus_getCurrentAction(swigCPtr, this));
  }

/**
 * Returns the paused state of the action.<br>
 * @return True when the action is paused, false if the action is active.
 */
  public boolean isPaused() {
    return PackageStatusModuleJNI.PackageStatus_isPaused(swigCPtr, this);
  }

/**
 * Returns the progress of the action.<br>
 * @return The progress of the action (in the range 0..100)
 */
  public float getProgress() {
    return PackageStatusModuleJNI.PackageStatus_getProgress(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return PackageStatusModuleJNI.PackageStatus_swigGetRawPtr(swigCPtr, this);
  }

}
