/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.utils;

import com.carto.graphics.Bitmap;

/**
 * A helper class for loading bitmaps and converting Bitmaps to Android Bitmaps an vice versa.
 */
public class BitmapUtils {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public BitmapUtils(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(BitmapUtils obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        BitmapUtilsModuleJNI.delete_BitmapUtils(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

/**
 * Loads the specified bitmap asset bundled with the application.<br>
 * @param assetPath The asset path to the image to be loaded.<br>
 * @return The loaded bitmap.
 */
  public static Bitmap loadBitmapFromAssets(String assetPath) {
    long cPtr = BitmapUtilsModuleJNI.BitmapUtils_loadBitmapFromAssets(assetPath);
    return (cPtr == 0) ? null : new Bitmap(cPtr, true);
  }

/**
 * Loads bitmap from specified file.<br>
 * @param filePath The path to the image to be loaded.<br>
 * @return The loaded bitmap.
 */
  public static Bitmap loadBitmapFromFile(String filePath) {
    long cPtr = BitmapUtilsModuleJNI.BitmapUtils_loadBitmapFromFile(filePath);
    return (cPtr == 0) ? null : new Bitmap(cPtr, true);
  }

/**
 * Creates a new Bitmap object from an existing Android Bitmap.<br>
 * @param androidBitmap The reference Android bitmap.<br>
 * @return The created bitmap.
 */
  public static Bitmap createBitmapFromAndroidBitmap(android.graphics.Bitmap androidBitmap) {
    long cPtr = BitmapUtilsModuleJNI.BitmapUtils_createBitmapFromAndroidBitmap(androidBitmap);
    return (cPtr == 0) ? null : new Bitmap(cPtr, true);
  }

/**
 * Creates a new Android Bitmap from an existing Bitmap.<br>
 * @param bitmap The existing bitmap.<br>
 * @return The android Bitmap.
 */
  public static android.graphics.Bitmap createAndroidBitmapFromBitmap(Bitmap bitmap) { return BitmapUtilsModuleJNI.BitmapUtils_createAndroidBitmapFromBitmap(Bitmap.getCPtr(bitmap), bitmap); }

}
