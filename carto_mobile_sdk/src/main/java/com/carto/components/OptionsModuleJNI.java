/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.components;

import com.carto.core.MapBounds;
import com.carto.core.MapRange;
import com.carto.core.MapVec;
import com.carto.core.ScreenPos;
import com.carto.graphics.Bitmap;
import com.carto.graphics.Color;
import com.carto.projections.Projection;

/** @hidden */
public class OptionsModuleJNI {
  public final static native void delete_Options(long jarg1);
  public final static native long Options_getAmbientLightColor(long jarg1, Options jarg1_);
  public final static native void Options_setAmbientLightColor(long jarg1, Options jarg1_, long jarg2, Color jarg2_);
  public final static native long Options_getMainLightColor(long jarg1, Options jarg1_);
  public final static native void Options_setMainLightColor(long jarg1, Options jarg1_, long jarg2, Color jarg2_);
  public final static native long Options_getMainLightDirection(long jarg1, Options jarg1_);
  public final static native void Options_setMainLightDirection(long jarg1, Options jarg1_, long jarg2, MapVec jarg2_);
  public final static native int Options_getRenderProjectionMode(long jarg1, Options jarg1_);
  public final static native void Options_setRenderProjectionMode(long jarg1, Options jarg1_, int jarg2);
  public final static native boolean Options_isClickTypeDetection(long jarg1, Options jarg1_);
  public final static native void Options_setClickTypeDetection(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isDoubleClickDetection(long jarg1, Options jarg1_);
  public final static native void Options_setDoubleClickDetection(long jarg1, Options jarg1_, boolean jarg2);
  public final static native float Options_getLongClickDuration(long jarg1, Options jarg1_);
  public final static native void Options_setLongClickDuration(long jarg1, Options jarg1_, float jarg2);
  public final static native float Options_getDoubleClickMaxDuration(long jarg1, Options jarg1_);
  public final static native void Options_setDoubleClickMaxDuration(long jarg1, Options jarg1_, float jarg2);
  public final static native int Options_getTileDrawSize(long jarg1, Options jarg1_);
  public final static native void Options_setTileDrawSize(long jarg1, Options jarg1_, int jarg2);
  public final static native float Options_getDPI(long jarg1, Options jarg1_);
  public final static native void Options_setDPI(long jarg1, Options jarg1_, float jarg2);
  public final static native float Options_getDrawDistance(long jarg1, Options jarg1_);
  public final static native void Options_setDrawDistance(long jarg1, Options jarg1_, float jarg2);
  public final static native int Options_getFieldOfViewY(long jarg1, Options jarg1_);
  public final static native void Options_setFieldOfViewY(long jarg1, Options jarg1_, int jarg2);
  public final static native int Options_getPanningMode(long jarg1, Options jarg1_);
  public final static native void Options_setPanningMode(long jarg1, Options jarg1_, int jarg2);
  public final static native int Options_getPivotMode(long jarg1, Options jarg1_);
  public final static native void Options_setPivotMode(long jarg1, Options jarg1_, int jarg2);
  public final static native boolean Options_isSeamlessPanning(long jarg1, Options jarg1_);
  public final static native void Options_setSeamlessPanning(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isRestrictedPanning(long jarg1, Options jarg1_);
  public final static native void Options_setRestrictedPanning(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isTiltGestureReversed(long jarg1, Options jarg1_);
  public final static native void Options_setTiltGestureReversed(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isZoomGestures(long jarg1, Options jarg1_);
  public final static native void Options_setZoomGestures(long jarg1, Options jarg1_, boolean jarg2);
  public final static native int Options_getEnvelopeThreadPoolSize(long jarg1, Options jarg1_);
  public final static native void Options_setEnvelopeThreadPoolSize(long jarg1, Options jarg1_, int jarg2);
  public final static native int Options_getTileThreadPoolSize(long jarg1, Options jarg1_);
  public final static native void Options_setTileThreadPoolSize(long jarg1, Options jarg1_, int jarg2);
  public final static native long Options_getClearColor(long jarg1, Options jarg1_);
  public final static native void Options_setClearColor(long jarg1, Options jarg1_, long jarg2, Color jarg2_);
  public final static native long Options_getSkyColor(long jarg1, Options jarg1_);
  public final static native void Options_setSkyColor(long jarg1, Options jarg1_, long jarg2, Color jarg2_);
  public final static native long Options_getBackgroundBitmap(long jarg1, Options jarg1_);
  public final static native void Options_setBackgroundBitmap(long jarg1, Options jarg1_, long jarg2, Bitmap jarg2_);
  public final static native float Options_getWatermarkAlignmentX(long jarg1, Options jarg1_);
  public final static native void Options_setWatermarkAlignmentX(long jarg1, Options jarg1_, float jarg2);
  public final static native float Options_getWatermarkAlignmentY(long jarg1, Options jarg1_);
  public final static native void Options_setWatermarkAlignmentY(long jarg1, Options jarg1_, float jarg2);
  public final static native float Options_getWatermarkScale(long jarg1, Options jarg1_);
  public final static native void Options_setWatermarkScale(long jarg1, Options jarg1_, float jarg2);
  public final static native long Options_getWatermarkBitmap(long jarg1, Options jarg1_);
  public final static native void Options_setWatermarkBitmap(long jarg1, Options jarg1_, long jarg2, Bitmap jarg2_);
  public final static native long Options_getWatermarkPadding(long jarg1, Options jarg1_);
  public final static native void Options_setWatermarkPadding(long jarg1, Options jarg1_, long jarg2, ScreenPos jarg2_);
  public final static native boolean Options_isUserInput(long jarg1, Options jarg1_);
  public final static native void Options_setUserInput(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isKineticPan(long jarg1, Options jarg1_);
  public final static native void Options_setKineticPan(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isKineticRotation(long jarg1, Options jarg1_);
  public final static native void Options_setKineticRotation(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isKineticZoom(long jarg1, Options jarg1_);
  public final static native void Options_setKineticZoom(long jarg1, Options jarg1_, boolean jarg2);
  public final static native boolean Options_isRotatable(long jarg1, Options jarg1_);
  public final static native void Options_setRotatable(long jarg1, Options jarg1_, boolean jarg2);
  public final static native long Options_getTiltRange(long jarg1, Options jarg1_);
  public final static native void Options_setTiltRange(long jarg1, Options jarg1_, long jarg2, MapRange jarg2_);
  public final static native long Options_getZoomRange(long jarg1, Options jarg1_);
  public final static native void Options_setZoomRange(long jarg1, Options jarg1_, long jarg2, MapRange jarg2_);
  public final static native long Options_getPanBounds(long jarg1, Options jarg1_);
  public final static native void Options_setPanBounds(long jarg1, Options jarg1_, long jarg2, MapBounds jarg2_);
  public final static native long Options_getFocusPointOffset(long jarg1, Options jarg1_);
  public final static native void Options_setFocusPointOffset(long jarg1, Options jarg1_, long jarg2, ScreenPos jarg2_);
  public final static native long Options_getBaseProjection(long jarg1, Options jarg1_);
  public final static native void Options_setBaseProjection(long jarg1, Options jarg1_, long jarg2, Projection jarg2_);
  public final static native long Options_swigGetRawPtr(long jarg1, Options jarg1_);
}
