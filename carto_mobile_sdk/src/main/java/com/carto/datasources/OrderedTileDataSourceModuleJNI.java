/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.core.StringMap;
import com.carto.datasources.TileDataSource;
import com.carto.datasources.components.TileData;

/** @hidden */
@com.carto.utils.DontObfuscate public class OrderedTileDataSourceModuleJNI {
  public final static native long new_OrderedTileDataSource(long jarg1, TileDataSource jarg1_, long jarg2, TileDataSource jarg2_);
  public final static native void delete_OrderedTileDataSource(long jarg1);
  public final static native int OrderedTileDataSource_getMinZoom(long jarg1, OrderedTileDataSource jarg1_);
  public final static native int OrderedTileDataSource_getMinZoomSwigExplicitOrderedTileDataSource(long jarg1, OrderedTileDataSource jarg1_);
  public final static native int OrderedTileDataSource_getMaxZoom(long jarg1, OrderedTileDataSource jarg1_);
  public final static native int OrderedTileDataSource_getMaxZoomSwigExplicitOrderedTileDataSource(long jarg1, OrderedTileDataSource jarg1_);
  public final static native long OrderedTileDataSource_getDataExtent(long jarg1, OrderedTileDataSource jarg1_);
  public final static native long OrderedTileDataSource_getDataExtentSwigExplicitOrderedTileDataSource(long jarg1, OrderedTileDataSource jarg1_);
  public final static native long OrderedTileDataSource_loadTile(long jarg1, OrderedTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long OrderedTileDataSource_loadTileSwigExplicitOrderedTileDataSource(long jarg1, OrderedTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long OrderedTileDataSource_swigGetRawPtr(long jarg1, OrderedTileDataSource jarg1_);
  public final static native String OrderedTileDataSource_swigGetClassName(long jarg1, OrderedTileDataSource jarg1_);
  public final static native Object OrderedTileDataSource_swigGetDirectorObject(long jarg1, OrderedTileDataSource jarg1_);
  public final static native void OrderedTileDataSource_director_connect(OrderedTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OrderedTileDataSource_change_ownership(OrderedTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long OrderedTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_OrderedTileDataSource_getMinZoom(OrderedTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_OrderedTileDataSource_getMaxZoom(OrderedTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_OrderedTileDataSource_getDataExtent(OrderedTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_OrderedTileDataSource_loadTile(OrderedTileDataSource self, long tile) {
    return TileData.getCPtr(self.loadTile(new MapTile(tile, true)));
  }
  public static void SwigDirector_OrderedTileDataSource_notifyTilesChanged(OrderedTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
