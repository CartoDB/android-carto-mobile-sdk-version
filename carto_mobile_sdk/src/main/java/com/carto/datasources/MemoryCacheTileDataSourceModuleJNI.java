/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.core.StringMap;
import com.carto.datasources.CacheTileDataSource;
import com.carto.datasources.components.TileData;

/** @hidden */
@com.carto.utils.DontObfuscate public class MemoryCacheTileDataSourceModuleJNI {
  public final static native long new_MemoryCacheTileDataSource(long jarg1, TileDataSource jarg1_);
  public final static native void delete_MemoryCacheTileDataSource(long jarg1);
  public final static native long MemoryCacheTileDataSource_loadTile(long jarg1, MemoryCacheTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long MemoryCacheTileDataSource_loadTileSwigExplicitMemoryCacheTileDataSource(long jarg1, MemoryCacheTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native void MemoryCacheTileDataSource_clear(long jarg1, MemoryCacheTileDataSource jarg1_);
  public final static native void MemoryCacheTileDataSource_clearSwigExplicitMemoryCacheTileDataSource(long jarg1, MemoryCacheTileDataSource jarg1_);
  public final static native long MemoryCacheTileDataSource_getCapacity(long jarg1, MemoryCacheTileDataSource jarg1_);
  public final static native long MemoryCacheTileDataSource_getCapacitySwigExplicitMemoryCacheTileDataSource(long jarg1, MemoryCacheTileDataSource jarg1_);
  public final static native void MemoryCacheTileDataSource_setCapacity(long jarg1, MemoryCacheTileDataSource jarg1_, long jarg2);
  public final static native void MemoryCacheTileDataSource_setCapacitySwigExplicitMemoryCacheTileDataSource(long jarg1, MemoryCacheTileDataSource jarg1_, long jarg2);
  public final static native long MemoryCacheTileDataSource_swigGetRawPtr(long jarg1, MemoryCacheTileDataSource jarg1_);
  public final static native String MemoryCacheTileDataSource_swigGetClassName(long jarg1, MemoryCacheTileDataSource jarg1_);
  public final static native Object MemoryCacheTileDataSource_swigGetDirectorObject(long jarg1, MemoryCacheTileDataSource jarg1_);
  public final static native void MemoryCacheTileDataSource_director_connect(MemoryCacheTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void MemoryCacheTileDataSource_change_ownership(MemoryCacheTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long MemoryCacheTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_MemoryCacheTileDataSource_getMinZoom(MemoryCacheTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_MemoryCacheTileDataSource_getMaxZoom(MemoryCacheTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_MemoryCacheTileDataSource_getDataExtent(MemoryCacheTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_MemoryCacheTileDataSource_loadTile(MemoryCacheTileDataSource self, long mapTile) {
    return TileData.getCPtr(self.loadTile(new MapTile(mapTile, true)));
  }
  public static void SwigDirector_MemoryCacheTileDataSource_notifyTilesChanged(MemoryCacheTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }
  public static void SwigDirector_MemoryCacheTileDataSource_clear(MemoryCacheTileDataSource self) {
    self.clear();
  }
  public static long SwigDirector_MemoryCacheTileDataSource_getCapacity(MemoryCacheTileDataSource self) {
    return self.getCapacity();
  }
  public static void SwigDirector_MemoryCacheTileDataSource_setCapacity(MemoryCacheTileDataSource self, long capacityInBytes) {
    self.setCapacity(capacityInBytes);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
