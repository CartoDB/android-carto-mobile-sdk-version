/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.core.StringMap;
import com.carto.datasources.TileDataSource;
import com.carto.datasources.components.TileData;

/** @hidden */
@com.carto.utils.DontObfuscate public class MBTilesTileDataSourceModuleJNI {
  public final static native long new_MBTilesTileDataSource__SWIG_0(String jarg1) throws java.io.IOException;
  public final static native long new_MBTilesTileDataSource__SWIG_1(int jarg1, int jarg2, String jarg3) throws java.io.IOException;
  public final static native long new_MBTilesTileDataSource__SWIG_2(int jarg1, int jarg2, String jarg3, int jarg4) throws java.io.IOException;
  public final static native void delete_MBTilesTileDataSource(long jarg1);
  public final static native long MBTilesTileDataSource_getMetaData(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native int MBTilesTileDataSource_getMinZoom(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native int MBTilesTileDataSource_getMinZoomSwigExplicitMBTilesTileDataSource(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native int MBTilesTileDataSource_getMaxZoom(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native int MBTilesTileDataSource_getMaxZoomSwigExplicitMBTilesTileDataSource(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native long MBTilesTileDataSource_getDataExtent(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native long MBTilesTileDataSource_getDataExtentSwigExplicitMBTilesTileDataSource(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native long MBTilesTileDataSource_loadTile(long jarg1, MBTilesTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long MBTilesTileDataSource_loadTileSwigExplicitMBTilesTileDataSource(long jarg1, MBTilesTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long MBTilesTileDataSource_swigGetRawPtr(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native String MBTilesTileDataSource_swigGetClassName(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native Object MBTilesTileDataSource_swigGetDirectorObject(long jarg1, MBTilesTileDataSource jarg1_);
  public final static native void MBTilesTileDataSource_director_connect(MBTilesTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void MBTilesTileDataSource_change_ownership(MBTilesTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long MBTilesTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_MBTilesTileDataSource_getMinZoom(MBTilesTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_MBTilesTileDataSource_getMaxZoom(MBTilesTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_MBTilesTileDataSource_getDataExtent(MBTilesTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_MBTilesTileDataSource_loadTile(MBTilesTileDataSource self, long mapTile) {
    return TileData.getCPtr(self.loadTile(new MapTile(mapTile, true)));
  }
  public static void SwigDirector_MBTilesTileDataSource_notifyTilesChanged(MBTilesTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
