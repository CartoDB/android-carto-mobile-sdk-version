/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.core.Variant;
import com.carto.datasources.TileDataSource;
import com.carto.datasources.components.TileData;
import com.carto.geometry.FeatureCollection;
import com.carto.projections.Projection;

/** @hidden */
@com.carto.utils.DontObfuscate public class GeoJSONVectorTileDataSourceModuleJNI {
  public final static native long new_GeoJSONVectorTileDataSource(int jarg1, int jarg2);
  public final static native void delete_GeoJSONVectorTileDataSource(long jarg1);
  public final static native float GeoJSONVectorTileDataSource_getSimplifyTolerance(long jarg1, GeoJSONVectorTileDataSource jarg1_);
  public final static native void GeoJSONVectorTileDataSource_setSimplifyTolerance(long jarg1, GeoJSONVectorTileDataSource jarg1_, float jarg2);
  public final static native float GeoJSONVectorTileDataSource_getDefaultLayerBuffer(long jarg1, GeoJSONVectorTileDataSource jarg1_);
  public final static native void GeoJSONVectorTileDataSource_setDefaultLayerBuffer(long jarg1, GeoJSONVectorTileDataSource jarg1_, float jarg2);
  public final static native int GeoJSONVectorTileDataSource_createLayer(long jarg1, GeoJSONVectorTileDataSource jarg1_, String jarg2) throws java.io.IOException;
  public final static native void GeoJSONVectorTileDataSource_setLayerGeoJSON(long jarg1, GeoJSONVectorTileDataSource jarg1_, int jarg2, long jarg3, Variant jarg3_) throws java.io.IOException;
  public final static native void GeoJSONVectorTileDataSource_setLayerFeatureCollection(long jarg1, GeoJSONVectorTileDataSource jarg1_, int jarg2, long jarg3, Projection jarg3_, long jarg4, FeatureCollection jarg4_) throws java.io.IOException;
  public final static native void GeoJSONVectorTileDataSource_deleteLayer(long jarg1, GeoJSONVectorTileDataSource jarg1_, int jarg2);
  public final static native long GeoJSONVectorTileDataSource_getDataExtent(long jarg1, GeoJSONVectorTileDataSource jarg1_);
  public final static native long GeoJSONVectorTileDataSource_getDataExtentSwigExplicitGeoJSONVectorTileDataSource(long jarg1, GeoJSONVectorTileDataSource jarg1_);
  public final static native long GeoJSONVectorTileDataSource_loadTile(long jarg1, GeoJSONVectorTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long GeoJSONVectorTileDataSource_loadTileSwigExplicitGeoJSONVectorTileDataSource(long jarg1, GeoJSONVectorTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long GeoJSONVectorTileDataSource_swigGetRawPtr(long jarg1, GeoJSONVectorTileDataSource jarg1_);
  public final static native String GeoJSONVectorTileDataSource_swigGetClassName(long jarg1, GeoJSONVectorTileDataSource jarg1_);
  public final static native Object GeoJSONVectorTileDataSource_swigGetDirectorObject(long jarg1, GeoJSONVectorTileDataSource jarg1_);
  public final static native void GeoJSONVectorTileDataSource_director_connect(GeoJSONVectorTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void GeoJSONVectorTileDataSource_change_ownership(GeoJSONVectorTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long GeoJSONVectorTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_GeoJSONVectorTileDataSource_getMinZoom(GeoJSONVectorTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_GeoJSONVectorTileDataSource_getMaxZoom(GeoJSONVectorTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_GeoJSONVectorTileDataSource_getDataExtent(GeoJSONVectorTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_GeoJSONVectorTileDataSource_loadTile(GeoJSONVectorTileDataSource self, long mapTile) {
    return TileData.getCPtr(self.loadTile(new MapTile(mapTile, true)));
  }
  public static void SwigDirector_GeoJSONVectorTileDataSource_notifyTilesChanged(GeoJSONVectorTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
