/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

/**
 * Spatial index type for local data source.
 */
public enum LocalSpatialIndexType {
/**
 * Null index, fastest if few elements are used. No element culling is performed.
 */
  LOCAL_SPATIAL_INDEX_TYPE_NULL,
/**
 * K-d tree index, element culling is exact and fast.
 */
  LOCAL_SPATIAL_INDEX_TYPE_KDTREE;

  public final int swigValue() {
    return swigValue;
  }

  public static LocalSpatialIndexType swigToEnum(int swigValue) {
    LocalSpatialIndexType[] swigValues = LocalSpatialIndexType.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (LocalSpatialIndexType swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + LocalSpatialIndexType.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private LocalSpatialIndexType() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private LocalSpatialIndexType(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private LocalSpatialIndexType(LocalSpatialIndexType swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

