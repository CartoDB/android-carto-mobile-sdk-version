/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapPos;
import com.carto.core.MapPosVector;
import com.carto.core.MapBounds;
import com.carto.core.ScreenPos;
import com.carto.core.ScreenPosVector;
import com.carto.core.ScreenPosVector;
import com.carto.core.StringMap;
import com.carto.datasources.TileDataSource;
import com.carto.datasources.components.TileData;
import com.carto.projections.Projection;
import com.carto.graphics.Bitmap;

/** @hidden */
@com.carto.utils.DontObfuscate public class BitmapOverlayRasterTileDataSourceModuleJNI {
  public final static native long new_BitmapOverlayRasterTileDataSource(int jarg1, int jarg2, long jarg3, Bitmap jarg3_, long jarg4, Projection jarg4_, long jarg5, MapPosVector jarg5_, long jarg6, ScreenPosVector jarg6_);
  public final static native void delete_BitmapOverlayRasterTileDataSource(long jarg1);
  public final static native long BitmapOverlayRasterTileDataSource_getDataExtent(long jarg1, BitmapOverlayRasterTileDataSource jarg1_);
  public final static native long BitmapOverlayRasterTileDataSource_getDataExtentSwigExplicitBitmapOverlayRasterTileDataSource(long jarg1, BitmapOverlayRasterTileDataSource jarg1_);
  public final static native long BitmapOverlayRasterTileDataSource_loadTile(long jarg1, BitmapOverlayRasterTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long BitmapOverlayRasterTileDataSource_loadTileSwigExplicitBitmapOverlayRasterTileDataSource(long jarg1, BitmapOverlayRasterTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long BitmapOverlayRasterTileDataSource_swigGetRawPtr(long jarg1, BitmapOverlayRasterTileDataSource jarg1_);
  public final static native String BitmapOverlayRasterTileDataSource_swigGetClassName(long jarg1, BitmapOverlayRasterTileDataSource jarg1_);
  public final static native Object BitmapOverlayRasterTileDataSource_swigGetDirectorObject(long jarg1, BitmapOverlayRasterTileDataSource jarg1_);
  public final static native void BitmapOverlayRasterTileDataSource_director_connect(BitmapOverlayRasterTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void BitmapOverlayRasterTileDataSource_change_ownership(BitmapOverlayRasterTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long BitmapOverlayRasterTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_BitmapOverlayRasterTileDataSource_getMinZoom(BitmapOverlayRasterTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_BitmapOverlayRasterTileDataSource_getMaxZoom(BitmapOverlayRasterTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_BitmapOverlayRasterTileDataSource_getDataExtent(BitmapOverlayRasterTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_BitmapOverlayRasterTileDataSource_loadTile(BitmapOverlayRasterTileDataSource self, long mapTile) {
    return TileData.getCPtr(self.loadTile(new MapTile(mapTile, true)));
  }
  public static void SwigDirector_BitmapOverlayRasterTileDataSource_notifyTilesChanged(BitmapOverlayRasterTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
