/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;

/** @hidden */
@com.carto.utils.DontObfuscate public class TileDownloadListenerModuleJNI {
  public final static native void delete_TileDownloadListener(long jarg1);
  public final static native void TileDownloadListener_onDownloadStarting(long jarg1, TileDownloadListener jarg1_, int jarg2);
  public final static native void TileDownloadListener_onDownloadStartingSwigExplicitTileDownloadListener(long jarg1, TileDownloadListener jarg1_, int jarg2);
  public final static native void TileDownloadListener_onDownloadProgress(long jarg1, TileDownloadListener jarg1_, float jarg2);
  public final static native void TileDownloadListener_onDownloadProgressSwigExplicitTileDownloadListener(long jarg1, TileDownloadListener jarg1_, float jarg2);
  public final static native void TileDownloadListener_onDownloadCompleted(long jarg1, TileDownloadListener jarg1_);
  public final static native void TileDownloadListener_onDownloadCompletedSwigExplicitTileDownloadListener(long jarg1, TileDownloadListener jarg1_);
  public final static native void TileDownloadListener_onDownloadFailed(long jarg1, TileDownloadListener jarg1_, long jarg2, MapTile jarg2_);
  public final static native void TileDownloadListener_onDownloadFailedSwigExplicitTileDownloadListener(long jarg1, TileDownloadListener jarg1_, long jarg2, MapTile jarg2_);
  public final static native long TileDownloadListener_swigGetRawPtr(long jarg1, TileDownloadListener jarg1_);
  public final static native String TileDownloadListener_swigGetClassName(long jarg1, TileDownloadListener jarg1_);
  public final static native Object TileDownloadListener_swigGetDirectorObject(long jarg1, TileDownloadListener jarg1_);
  public final static native long new_TileDownloadListener();
  public final static native void TileDownloadListener_director_connect(TileDownloadListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void TileDownloadListener_change_ownership(TileDownloadListener obj, long cptr, boolean take_or_release);

  public static void SwigDirector_TileDownloadListener_onDownloadStarting(TileDownloadListener self, int tileCount) {
    self.onDownloadStarting(tileCount);
  }
  public static void SwigDirector_TileDownloadListener_onDownloadProgress(TileDownloadListener self, float progress) {
    self.onDownloadProgress(progress);
  }
  public static void SwigDirector_TileDownloadListener_onDownloadCompleted(TileDownloadListener self) {
    self.onDownloadCompleted();
  }
  public static void SwigDirector_TileDownloadListener_onDownloadFailed(TileDownloadListener self, long tile) {
    self.onDownloadFailed(new MapTile(tile, true));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
