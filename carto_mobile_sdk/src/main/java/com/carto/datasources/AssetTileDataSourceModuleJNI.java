/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.core.StringMap;
import com.carto.datasources.TileDataSource;
import com.carto.datasources.components.TileData;

/** @hidden */
@com.carto.utils.DontObfuscate public class AssetTileDataSourceModuleJNI {
  public final static native long new_AssetTileDataSource(int jarg1, int jarg2, String jarg3);
  public final static native void delete_AssetTileDataSource(long jarg1);
  public final static native long AssetTileDataSource_loadTile(long jarg1, AssetTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long AssetTileDataSource_loadTileSwigExplicitAssetTileDataSource(long jarg1, AssetTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native String AssetTileDataSource_buildAssetPath(long jarg1, AssetTileDataSource jarg1_, String jarg2, long jarg3, MapTile jarg3_);
  public final static native String AssetTileDataSource_buildAssetPathSwigExplicitAssetTileDataSource(long jarg1, AssetTileDataSource jarg1_, String jarg2, long jarg3, MapTile jarg3_);
  public final static native long AssetTileDataSource_swigGetRawPtr(long jarg1, AssetTileDataSource jarg1_);
  public final static native String AssetTileDataSource_swigGetClassName(long jarg1, AssetTileDataSource jarg1_);
  public final static native Object AssetTileDataSource_swigGetDirectorObject(long jarg1, AssetTileDataSource jarg1_);
  public final static native void AssetTileDataSource_director_connect(AssetTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AssetTileDataSource_change_ownership(AssetTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long AssetTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_AssetTileDataSource_getMinZoom(AssetTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_AssetTileDataSource_getMaxZoom(AssetTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_AssetTileDataSource_getDataExtent(AssetTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_AssetTileDataSource_loadTile(AssetTileDataSource self, long tile) {
    return TileData.getCPtr(self.loadTile(new MapTile(tile, true)));
  }
  public static void SwigDirector_AssetTileDataSource_notifyTilesChanged(AssetTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }
  public static String SwigDirector_AssetTileDataSource_buildAssetPath(AssetTileDataSource self, String basePath, long tile) {
    return self.buildAssetPath(basePath, new MapTile(tile, true));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
