/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.core.StringMap;
import com.carto.datasources.TileDataSource;
import com.carto.datasources.components.TileData;

/** @hidden */
@com.carto.utils.DontObfuscate public class CacheTileDataSourceModuleJNI {
  public final static native void delete_CacheTileDataSource(long jarg1);
  public final static native int CacheTileDataSource_getMinZoom(long jarg1, CacheTileDataSource jarg1_);
  public final static native int CacheTileDataSource_getMinZoomSwigExplicitCacheTileDataSource(long jarg1, CacheTileDataSource jarg1_);
  public final static native int CacheTileDataSource_getMaxZoom(long jarg1, CacheTileDataSource jarg1_);
  public final static native int CacheTileDataSource_getMaxZoomSwigExplicitCacheTileDataSource(long jarg1, CacheTileDataSource jarg1_);
  public final static native long CacheTileDataSource_getDataExtent(long jarg1, CacheTileDataSource jarg1_);
  public final static native long CacheTileDataSource_getDataExtentSwigExplicitCacheTileDataSource(long jarg1, CacheTileDataSource jarg1_);
  public final static native void CacheTileDataSource_notifyTilesChanged(long jarg1, CacheTileDataSource jarg1_, boolean jarg2);
  public final static native void CacheTileDataSource_notifyTilesChangedSwigExplicitCacheTileDataSource(long jarg1, CacheTileDataSource jarg1_, boolean jarg2);
  public final static native long CacheTileDataSource_getDataSource(long jarg1, CacheTileDataSource jarg1_);
  public final static native void CacheTileDataSource_clear(long jarg1, CacheTileDataSource jarg1_);
  public final static native long CacheTileDataSource_getCapacity(long jarg1, CacheTileDataSource jarg1_);
  public final static native void CacheTileDataSource_setCapacity(long jarg1, CacheTileDataSource jarg1_, long jarg2);
  public final static native long new_CacheTileDataSource(long jarg1, TileDataSource jarg1_);
  public final static native long CacheTileDataSource_swigGetRawPtr(long jarg1, CacheTileDataSource jarg1_);
  public final static native String CacheTileDataSource_swigGetClassName(long jarg1, CacheTileDataSource jarg1_);
  public final static native Object CacheTileDataSource_swigGetDirectorObject(long jarg1, CacheTileDataSource jarg1_);
  public final static native void CacheTileDataSource_director_connect(CacheTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void CacheTileDataSource_change_ownership(CacheTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long CacheTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_CacheTileDataSource_getMinZoom(CacheTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_CacheTileDataSource_getMaxZoom(CacheTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_CacheTileDataSource_getDataExtent(CacheTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_CacheTileDataSource_loadTile(CacheTileDataSource self, long tile) {
    return TileData.getCPtr(self.loadTile(new MapTile(tile, true)));
  }
  public static void SwigDirector_CacheTileDataSource_notifyTilesChanged(CacheTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }
  public static void SwigDirector_CacheTileDataSource_clear(CacheTileDataSource self) {
    self.clear();
  }
  public static long SwigDirector_CacheTileDataSource_getCapacity(CacheTileDataSource self) {
    return self.getCapacity();
  }
  public static void SwigDirector_CacheTileDataSource_setCapacity(CacheTileDataSource self, long capacityInBytes) {
    self.setCapacity(capacityInBytes);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
