/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources;

import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.core.StringMap;
import com.carto.datasources.TileDataSource;
import com.carto.datasources.components.TileData;

/** @hidden */
@com.carto.utils.DontObfuscate public class CombinedTileDataSourceModuleJNI {
  public final static native long new_CombinedTileDataSource(long jarg1, TileDataSource jarg1_, long jarg2, TileDataSource jarg2_, int jarg3);
  public final static native void delete_CombinedTileDataSource(long jarg1);
  public final static native int CombinedTileDataSource_getMinZoom(long jarg1, CombinedTileDataSource jarg1_);
  public final static native int CombinedTileDataSource_getMinZoomSwigExplicitCombinedTileDataSource(long jarg1, CombinedTileDataSource jarg1_);
  public final static native int CombinedTileDataSource_getMaxZoom(long jarg1, CombinedTileDataSource jarg1_);
  public final static native int CombinedTileDataSource_getMaxZoomSwigExplicitCombinedTileDataSource(long jarg1, CombinedTileDataSource jarg1_);
  public final static native long CombinedTileDataSource_getDataExtent(long jarg1, CombinedTileDataSource jarg1_);
  public final static native long CombinedTileDataSource_getDataExtentSwigExplicitCombinedTileDataSource(long jarg1, CombinedTileDataSource jarg1_);
  public final static native long CombinedTileDataSource_loadTile(long jarg1, CombinedTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long CombinedTileDataSource_loadTileSwigExplicitCombinedTileDataSource(long jarg1, CombinedTileDataSource jarg1_, long jarg2, MapTile jarg2_);
  public final static native long CombinedTileDataSource_swigGetRawPtr(long jarg1, CombinedTileDataSource jarg1_);
  public final static native String CombinedTileDataSource_swigGetClassName(long jarg1, CombinedTileDataSource jarg1_);
  public final static native Object CombinedTileDataSource_swigGetDirectorObject(long jarg1, CombinedTileDataSource jarg1_);
  public final static native void CombinedTileDataSource_director_connect(CombinedTileDataSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void CombinedTileDataSource_change_ownership(CombinedTileDataSource obj, long cptr, boolean take_or_release);
  public final static native long CombinedTileDataSource_SWIGSmartPtrUpcast(long jarg1);

  public static int SwigDirector_CombinedTileDataSource_getMinZoom(CombinedTileDataSource self) {
    return self.getMinZoom();
  }
  public static int SwigDirector_CombinedTileDataSource_getMaxZoom(CombinedTileDataSource self) {
    return self.getMaxZoom();
  }
  public static long SwigDirector_CombinedTileDataSource_getDataExtent(CombinedTileDataSource self) {
    return MapBounds.getCPtr(self.getDataExtent());
  }
  public static long SwigDirector_CombinedTileDataSource_loadTile(CombinedTileDataSource self, long tile) {
    return TileData.getCPtr(self.loadTile(new MapTile(tile, true)));
  }
  public static void SwigDirector_CombinedTileDataSource_notifyTilesChanged(CombinedTileDataSource self, boolean removeTiles) {
    self.notifyTilesChanged(removeTiles);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
