/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.datasources.components;

import com.carto.vectorelements.VectorElement;
import com.carto.vectorelements.VectorElementVector;

/**
 * A wrapper class for vector element data.
 */
public class VectorData {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public VectorData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(VectorData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VectorDataModuleJNI.delete_VectorData(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof VectorData) {
      return ((VectorData)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * Constructs a VectorData object from a list of vector elements.<br>
 * @param elements The list of vector elements.
 */
  public VectorData(VectorElementVector elements) {
    this(VectorDataModuleJNI.new_VectorData(VectorElementVector.getCPtr(elements), elements), true);
  }

/**
 * Returns the list of vector elements.<br>
 * @return The list of vector elements.
 */
  public VectorElementVector getElements() { return new VectorElementVector(VectorDataModuleJNI.VectorData_getElements(swigCPtr, this), true); }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return VectorDataModuleJNI.VectorData_swigGetRawPtr(swigCPtr, this);
  }

}
