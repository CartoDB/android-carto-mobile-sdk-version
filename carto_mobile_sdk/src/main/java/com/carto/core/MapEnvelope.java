/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.core;

import com.carto.core.MapBounds;
import com.carto.core.MapPosVector;

/**
 * A bounding area on the map. Can be defined by a map bounds object or by a convex bounding polygon.<br>
 * This class is intended for conservative object area estimation and fast intersection testing.
 */
public class MapEnvelope {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public MapEnvelope(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(MapEnvelope obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MapEnvelopeModuleJNI.delete_MapEnvelope(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof MapEnvelope) {
      return equalsInternal((MapEnvelope)obj);
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return hashCodeInternal();
  }


/**
 * Constructs an empty MapEnvelope object. Nothing is contained within<br>
 * this envelope.
 */
  public MapEnvelope() {
    this(MapEnvelopeModuleJNI.new_MapEnvelope__SWIG_0(), true);
  }

/**
 * Constructs a MapEnvelope object using map bounds.<br>
 * @param bounds The bounds for the envelope.
 */
  public MapEnvelope(MapBounds bounds) {
    this(MapEnvelopeModuleJNI.new_MapEnvelope__SWIG_1(MapBounds.getCPtr(bounds), bounds), true);
  }

/**
 * Constructs a MapEnvelope object from a convex bounding polygon.<br>
 * @param convexHull The list of convex hull points.
 */
  public MapEnvelope(MapPosVector convexHull) {
    this(MapEnvelopeModuleJNI.new_MapEnvelope__SWIG_2(MapPosVector.getCPtr(convexHull), convexHull), true);
  }

/**
 * Returns the map bounds of this map envelope.<br>
 * @return The map bounds of this map envelope.
 */
  public MapBounds getBounds() { return new MapBounds(MapEnvelopeModuleJNI.MapEnvelope_getBounds(swigCPtr, this), true); }

/**
 * Returns the convex hull of this map envelope.<br>
 * @return The convex hull of this map envelope.
 */
  public MapPosVector getConvexHull() { return new MapPosVector(MapEnvelopeModuleJNI.MapEnvelope_getConvexHull(swigCPtr, this), true); }

/**
 * Tests whether this map envelope contains another map envelope.<br>
 * @param envelope The other map envelope.<br>
 * @return True if this map envelope contains the other map envelope.
 */
  public boolean contains(MapEnvelope envelope) {
    return MapEnvelopeModuleJNI.MapEnvelope_contains(swigCPtr, this, MapEnvelope.getCPtr(envelope), envelope);
  }

/**
 * Tests whether this map envelope intersects with another map envelope.<br>
 * @param envelope The other map envelope.<br>
 * @return True if this map envelope intersects the other map envelope.
 */
  public boolean intersects(MapEnvelope envelope) {
    return MapEnvelopeModuleJNI.MapEnvelope_intersects(swigCPtr, this, MapEnvelope.getCPtr(envelope), envelope);
  }

/**
 * Checks for equality between this and another envelope.<br>
 * @param envelope The other map envelope object.<br>
 * @return True if equal.
 */
  private boolean equalsInternal(MapEnvelope envelope) {
    return MapEnvelopeModuleJNI.MapEnvelope_equalsInternal(swigCPtr, this, MapEnvelope.getCPtr(envelope), envelope);
  }

/**
 * Returns the hash value of this object.<br>
 * @return The hash value of this object.
 */
  private int hashCodeInternal() {
    return MapEnvelopeModuleJNI.MapEnvelope_hashCodeInternal(swigCPtr, this);
  }

/**
 * Creates a string representation of this map envelope, useful for logging.<br>
 * @return The string representation of this map envelope.
 */
  public String toString() {
    return MapEnvelopeModuleJNI.MapEnvelope_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return MapEnvelopeModuleJNI.MapEnvelope_swigGetRawPtr(swigCPtr, this);
  }

}
