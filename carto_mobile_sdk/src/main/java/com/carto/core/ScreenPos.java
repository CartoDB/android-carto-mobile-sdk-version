/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.core;

/**
 * A screen position defined by x,y floating point numbers.
 */
public class ScreenPos {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public ScreenPos(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(ScreenPos obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ScreenPosModuleJNI.delete_ScreenPos(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof ScreenPos) {
      return equalsInternal((ScreenPos)obj);
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return hashCodeInternal();
  }


/**
 * Constructs a ScreenPos object. All coordinates will be 0.
 */
  public ScreenPos() {
    this(ScreenPosModuleJNI.new_ScreenPos__SWIG_0(), true);
  }

/**
 * Constructs a ScreenPos object from 2 coordinates. <br>
 * @param x The x coordinate.<br>
 * @param y The y coordinate.
 */
  public ScreenPos(float x, float y) {
    this(ScreenPosModuleJNI.new_ScreenPos__SWIG_1(x, y), true);
  }

/**
 * Returns the x coordinate of this position.<br>
 * @return The x coordinate of this position.
 */
  public float getX() {
    return ScreenPosModuleJNI.ScreenPos_getX(swigCPtr, this);
  }

/**
 * Returns the y coordinate of this position.<br>
 * @return The y coordinate of this position.
 */
  public float getY() {
    return ScreenPosModuleJNI.ScreenPos_getY(swigCPtr, this);
  }

/**
 * Checks for equality between this and another screen position.<br>
 * @param p The other screen position.<br>
 * @return True if equal.
 */
  private boolean equalsInternal(ScreenPos p) {
    return ScreenPosModuleJNI.ScreenPos_equalsInternal(swigCPtr, this, ScreenPos.getCPtr(p), p);
  }

/**
 * Returns the hash value of this object.<br>
 * @return The hash value of this object.
 */
  private int hashCodeInternal() {
    return ScreenPosModuleJNI.ScreenPos_hashCodeInternal(swigCPtr, this);
  }

/**
 * Creates a string representation of this screen position, useful for logging.<br>
 * @return The string representation of this screen position.
 */
  public String toString() {
    return ScreenPosModuleJNI.ScreenPos_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return ScreenPosModuleJNI.ScreenPos_swigGetRawPtr(swigCPtr, this);
  }

}
