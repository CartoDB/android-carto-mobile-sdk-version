/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.core;

import com.carto.core.MapVec;

/** @hidden */
public class MapPosModuleJNI {
  public final static native long new_MapPos__SWIG_0();
  public final static native long new_MapPos__SWIG_1(double jarg1, double jarg2);
  public final static native long new_MapPos__SWIG_2(double jarg1, double jarg2, double jarg3);
  public final static native double MapPos_getX(long jarg1, MapPos jarg1_);
  public final static native double MapPos_getY(long jarg1, MapPos jarg1_);
  public final static native double MapPos_getZ(long jarg1, MapPos jarg1_);
  public final static native long MapPos_add(long jarg1, MapPos jarg1_, long jarg2, MapVec jarg2_);
  public final static native long MapPos_subVec(long jarg1, MapPos jarg1_, long jarg2, MapVec jarg2_);
  public final static native long MapPos_subPos(long jarg1, MapPos jarg1_, long jarg2, MapPos jarg2_);
  public final static native boolean MapPos_equalsInternal(long jarg1, MapPos jarg1_, long jarg2, MapPos jarg2_);
  public final static native int MapPos_hashCodeInternal(long jarg1, MapPos jarg1_);
  public final static native String MapPos_toString(long jarg1, MapPos jarg1_);
  public final static native long MapPos_swigGetRawPtr(long jarg1, MapPos jarg1_);
  public final static native void delete_MapPos(long jarg1);
  public final static native long new_MapPosVector__SWIG_0();
  public final static native long new_MapPosVector__SWIG_1(long jarg1);
  public final static native long MapPosVector_size(long jarg1, MapPosVector jarg1_);
  public final static native long MapPosVector_capacity(long jarg1, MapPosVector jarg1_);
  public final static native void MapPosVector_reserve(long jarg1, MapPosVector jarg1_, long jarg2);
  public final static native boolean MapPosVector_isEmpty(long jarg1, MapPosVector jarg1_);
  public final static native void MapPosVector_clear(long jarg1, MapPosVector jarg1_);
  public final static native void MapPosVector_add(long jarg1, MapPosVector jarg1_, long jarg2, MapPos jarg2_);
  public final static native long MapPosVector_get(long jarg1, MapPosVector jarg1_, int jarg2);
  public final static native void MapPosVector_set(long jarg1, MapPosVector jarg1_, int jarg2, long jarg3, MapPos jarg3_);
  public final static native long MapPosVector_swigGetRawPtr(long jarg1, MapPosVector jarg1_);
  public final static native void delete_MapPosVector(long jarg1);
  public final static native long new_MapPosVectorVector__SWIG_0();
  public final static native long new_MapPosVectorVector__SWIG_1(long jarg1);
  public final static native long MapPosVectorVector_size(long jarg1, MapPosVectorVector jarg1_);
  public final static native long MapPosVectorVector_capacity(long jarg1, MapPosVectorVector jarg1_);
  public final static native void MapPosVectorVector_reserve(long jarg1, MapPosVectorVector jarg1_, long jarg2);
  public final static native boolean MapPosVectorVector_isEmpty(long jarg1, MapPosVectorVector jarg1_);
  public final static native void MapPosVectorVector_clear(long jarg1, MapPosVectorVector jarg1_);
  public final static native void MapPosVectorVector_add(long jarg1, MapPosVectorVector jarg1_, long jarg2, MapPosVector jarg2_);
  public final static native long MapPosVectorVector_get(long jarg1, MapPosVectorVector jarg1_, int jarg2);
  public final static native void MapPosVectorVector_set(long jarg1, MapPosVectorVector jarg1_, int jarg2, long jarg3, MapPosVector jarg3_);
  public final static native long MapPosVectorVector_swigGetRawPtr(long jarg1, MapPosVectorVector jarg1_);
  public final static native void delete_MapPosVectorVector(long jarg1);
}
