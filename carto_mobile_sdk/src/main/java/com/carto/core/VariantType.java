/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.core;

/**
 * Variant type.
 */
public enum VariantType {
/**
 * Null element.
 */
  VARIANT_TYPE_NULL,
/**
 * String element.
 */
  VARIANT_TYPE_STRING,
/**
 * Boolean element.
 */
  VARIANT_TYPE_BOOL,
/**
 * Integer element.
 */
  VARIANT_TYPE_INTEGER,
/**
 * Double-precision floating point element.
 */
  VARIANT_TYPE_DOUBLE,
/**
 * Array element.
 */
  VARIANT_TYPE_ARRAY,
/**
 * Object (dictionary) element.
 */
  VARIANT_TYPE_OBJECT;

  public final int swigValue() {
    return swigValue;
  }

  public static VariantType swigToEnum(int swigValue) {
    VariantType[] swigValues = VariantType.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (VariantType swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + VariantType.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private VariantType() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private VariantType(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private VariantType(VariantType swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

