/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.core;

/**
 * A helper class for building variant arrays.
 */
public class VariantArrayBuilder {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public VariantArrayBuilder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(VariantArrayBuilder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VariantArrayBuilderModuleJNI.delete_VariantArrayBuilder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof VariantArrayBuilder) {
      return ((VariantArrayBuilder)obj).swigGetRawPtr() == swigGetRawPtr();
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return (int)swigGetRawPtr();
  }


/**
 * A default constructor.
 */
  public VariantArrayBuilder() {
    this(VariantArrayBuilderModuleJNI.new_VariantArrayBuilder(), true);
  }

/**
 * Clears the array.
 */
  public void clear() {
    VariantArrayBuilderModuleJNI.VariantArrayBuilder_clear(swigCPtr, this);
  }

/**
 * Adds a new string to the array as the last element.<br>
 * @param str The string to add.
 */
  public void addString(String str) {
    VariantArrayBuilderModuleJNI.VariantArrayBuilder_addString(swigCPtr, this, str);
  }

/**
 * Adds a new boolean to the array as the last element.<br>
 * @param val The boolean to add.
 */
  public void addBool(boolean val) {
    VariantArrayBuilderModuleJNI.VariantArrayBuilder_addBool(swigCPtr, this, val);
  }

/**
 * Adds a new long integer to the array as the last element.<br>
 * @param val The integer to add.
 */
  public void addLong(long val) {
    VariantArrayBuilderModuleJNI.VariantArrayBuilder_addLong(swigCPtr, this, val);
  }

/**
 * Adds a new double floating point value to the array as the last element.<br>
 * @param val The floating point value to add.
 */
  public void addDouble(double val) {
    VariantArrayBuilderModuleJNI.VariantArrayBuilder_addDouble(swigCPtr, this, val);
  }

/**
 * Adds a new variant to the array as the last element.<br>
 * @param var The variant to add.
 */
  public void addVariant(Variant var) {
    VariantArrayBuilderModuleJNI.VariantArrayBuilder_addVariant(swigCPtr, this, Variant.getCPtr(var), var);
  }

/**
 * Builds a new array variant from the added elements.<br>
 * @return The corresponding variant object.
 */
  public Variant buildVariant() { return new Variant(VariantArrayBuilderModuleJNI.VariantArrayBuilder_buildVariant(swigCPtr, this), true); }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return VariantArrayBuilderModuleJNI.VariantArrayBuilder_swigGetRawPtr(swigCPtr, this);
  }

}
