/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.core;

/**
 * An immutable map tile, used by tile layers for representing small pieces of map at different zoom levels and coordinates.
 */
public class MapTile {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public MapTile(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(MapTile obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MapTileModuleJNI.delete_MapTile(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof MapTile) {
      return equalsInternal((MapTile)obj);
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return hashCodeInternal();
  }


/**
 * Constructs an empty MapTile object.
 */
  public MapTile() {
    this(MapTileModuleJNI.new_MapTile__SWIG_0(), true);
  }

/**
 * Constructs a MapTile object based on coordinates, zoom level and frame number.<br>
 * @param x The x coordinate of the tile.<br>
 * @param y The y coordinate of the tile.<br>
 * @param zoom The zoom level of the tile.<br>
 * @param frameNr The frame number of the tile.
 */
  public MapTile(int x, int y, int zoom, int frameNr) {
    this(MapTileModuleJNI.new_MapTile__SWIG_1(x, y, zoom, frameNr), true);
  }

/**
 * Returns the x coordinate of this map tile.<br>
 * @return The x coordinate of this map tile.
 */
  public int getX() {
    return MapTileModuleJNI.MapTile_getX(swigCPtr, this);
  }

/**
 * Returns the y coordinate of this map tile.<br>
 * @return The y coordinate of this map tile.
 */
  public int getY() {
    return MapTileModuleJNI.MapTile_getY(swigCPtr, this);
  }

/**
 * Returns the zoom level of this map tile.<br>
 * @return The zoom level of this map tile.
 */
  public int getZoom() {
    return MapTileModuleJNI.MapTile_getZoom(swigCPtr, this);
  }

/**
 * Returns the time of this map tile.<br>
 * @return The time of this map tile.
 */
  public int getFrameNr() {
    return MapTileModuleJNI.MapTile_getFrameNr(swigCPtr, this);
  }

/**
 * Returns the internal tile id of this map tile.<br>
 * @return The internal tile id of this map tile.
 */
  public long getTileId() {
    return MapTileModuleJNI.MapTile_getTileId(swigCPtr, this);
  }

/**
 * Checks for equality between this and another map tile.<br>
 * @param tile The other map tile.<br>
 * @return True if equal.
 */
  private boolean equalsInternal(MapTile tile) {
    return MapTileModuleJNI.MapTile_equalsInternal(swigCPtr, this, MapTile.getCPtr(tile), tile);
  }

/**
 * Returns the hash value of this object.<br>
 * @return The hash value of this object.
 */
  private int hashCodeInternal() {
    return MapTileModuleJNI.MapTile_hashCodeInternal(swigCPtr, this);
  }

/**
 * Creates a string representation of this map tile, useful for logging.<br>
 * @return The string representation of this map tile.
 */
  public String toString() {
    return MapTileModuleJNI.MapTile_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return MapTileModuleJNI.MapTile_swigGetRawPtr(swigCPtr, this);
  }

}
