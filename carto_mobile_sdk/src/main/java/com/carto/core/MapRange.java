/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.core;

/**
 * A container class that defines a half closed range of values using minimum and maximum values.
 */
public class MapRange {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public MapRange(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(MapRange obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MapRangeModuleJNI.delete_MapRange(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  /**
   * Checks if this object is equal to the specified object.
   * @param obj The reference object.
   * @return True when objects are equal, false otherwise.
   */
  public boolean equals(Object obj) {
    if (obj instanceof MapRange) {
      return equalsInternal((MapRange)obj);
    }
    return false;
  }

  /**
   * Returns the hash value of this object.
   * @return The hash value of this object.
   */
  public int hashCode() {
    return hashCodeInternal();
  }


/**
 * Constructs a MapRange object. The minimum value will be set to positive infinity<br>
 * and the maximum value to negative infinity.
 */
  public MapRange() {
    this(MapRangeModuleJNI.new_MapRange__SWIG_0(), true);
  }

/**
 * Constructs a MapRange object from min and max values.<br>
 * If min &gt; max, the values will be swapped internally.<br>
 * @param min The min value.<br>
 * @param max The max value.
 */
  public MapRange(float min, float max) {
    this(MapRangeModuleJNI.new_MapRange__SWIG_1(min, max), true);
  }

/**
 * Returns the min value of this map range.<br>
 * @return The min value of this map range.
 */
  public float getMin() {
    return MapRangeModuleJNI.MapRange_getMin(swigCPtr, this);
  }

/**
 * Returns the max value of this map range.<br>
 * @return The max value of this map range.
 */
  public float getMax() {
    return MapRangeModuleJNI.MapRange_getMax(swigCPtr, this);
  }

/**
 * Tests if a value is in this map range. Value is considered in range if min &lt;= val &lt; max.<br>
 * @param value The value to be tested.<br>
 * @return True if value is in this map range.
 */
  public boolean inRange(float value) {
    return MapRangeModuleJNI.MapRange_inRange(swigCPtr, this, value);
  }

/**
 * Calculate the midrange value.<br>
 * @return The midrange value.
 */
  public float getMidrange() {
    return MapRangeModuleJNI.MapRange_getMidrange(swigCPtr, this);
  }

/**
 * Calculates the length of this map range. Defined as max - min.<br>
 * @return The length of this map range.
 */
  public float length() {
    return MapRangeModuleJNI.MapRange_length(swigCPtr, this);
  }

/**
 * Checks for equality between this and another map tile.<br>
 * @param mapRange The other map range.<br>
 * @return True if equal.
 */
  private boolean equalsInternal(MapRange mapRange) {
    return MapRangeModuleJNI.MapRange_equalsInternal(swigCPtr, this, MapRange.getCPtr(mapRange), mapRange);
  }

/**
 * Returns the hash value of this object.<br>
 * @return The hash value of this object.
 */
  private int hashCodeInternal() {
    return MapRangeModuleJNI.MapRange_hashCodeInternal(swigCPtr, this);
  }

/**
 * Creates a string representation of this map range, useful for logging.<br>
 * @return The string representation of this map range.
 */
  public String toString() {
    return MapRangeModuleJNI.MapRange_toString(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return MapRangeModuleJNI.MapRange_swigGetRawPtr(swigCPtr, this);
  }

}
