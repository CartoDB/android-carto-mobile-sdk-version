/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.layers;

import com.carto.datasources.TileDataSource;
import com.carto.graphics.Color;
import com.carto.layers.RasterTileLayer;

/**
 * A tile layer that displays an overlay hillshading. Should be used together with corresponding data source that encodes height in RGBA image.<br>
 * The shading is based on the direction of the main light source, which can be configured using Options class.<br>
 * Note: this class is experimental and may change or even be removed in future SDK versions.
 */
@com.carto.utils.DontObfuscate public class HillshadeRasterTileLayer extends RasterTileLayer {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public HillshadeRasterTileLayer(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(HillshadeRasterTileLayer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HillshadeRasterTileLayerModuleJNI.delete_HillshadeRasterTileLayer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.layers.HillshadeRasterTileLayer swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.layers.HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.layers.HillshadeRasterTileLayer) director;
    }

    String objClassName = com.carto.layers.HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_swigGetClassName(cPtr, null);
    com.carto.layers.HillshadeRasterTileLayer objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.layers." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.layers.HillshadeRasterTileLayer) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a HillshadeRasterTileLayer object from a data source.<br>
 * @param dataSource The data source from which this layer loads data.
 */
  public HillshadeRasterTileLayer(TileDataSource dataSource) {
    this(HillshadeRasterTileLayerModuleJNI.new_HillshadeRasterTileLayer(TileDataSource.getCPtr(dataSource), dataSource), true);
  }

/**
 * Returns the contrast of the hillshade overlay.<br>
 * @return The contrast value (between 0..1). Default is 0.5.
 */
  public float getContrast() {
    return HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_getContrast(swigCPtr, this);
  }

/**
 * Sets the contrast of the hillshade overlay.<br>
 * @param contrast The contrast value (between 0..1).
 */
  public void setContrast(float contrast) {
    HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_setContrast(swigCPtr, this, contrast);
  }

/**
 * Returns the height scale of the hillshade overlay.<br>
 * @return The relative height scale. Default is 1.0.
 */
  public float getHeightScale() {
    return HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_getHeightScale(swigCPtr, this);
  }

/**
 * Sets the height scale of the hillshade overlay.<br>
 * @param heightScale The relative height scale. Actual height is multiplied by this values.
 */
  public void setHeightScale(float heightScale) {
    HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_setHeightScale(swigCPtr, this, heightScale);
  }

/**
 * Returns the shadow color of the layer.<br>
 * @return The shadow color of the layer.
 */
  public Color getShadowColor() { return new Color(HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_getShadowColor(swigCPtr, this), true); }

/**
 * Sets the shadow color of the layer.<br>
 * @param color The new shadow color of the layer.
 */
  public void setShadowColor(Color color) {
    HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_setShadowColor(swigCPtr, this, Color.getCPtr(color), color);
  }

/**
 * Returns the highlight color of the layer.<br>
 * @return The highlight color of the layer.
 */
  public Color getHighlightColor() { return new Color(HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_getHighlightColor(swigCPtr, this), true); }

/**
 * Sets the highlight color of the layer.<br>
 * @param color The new highlight color of the layer.
 */
  public void setHighlightColor(Color color) {
    HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_setHighlightColor(swigCPtr, this, Color.getCPtr(color), color);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return HillshadeRasterTileLayerModuleJNI.HillshadeRasterTileLayer_swigGetDirectorObject(swigCPtr, this);
  }

}
