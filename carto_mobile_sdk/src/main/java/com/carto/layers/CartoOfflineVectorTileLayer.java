/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.layers;

import com.carto.layers.CartoVectorTileLayer;
import com.carto.packagemanager.CartoPackageManager;
import com.carto.utils.AssetPackage;

/**
 * Specialized offline vector tile layer that uses CartoPackageManager for offline maps service.<br>
 * This layer is intended as a 'shortcut' to make using Carto offline service and<br>
 * vector tiles as simple as possible.
 */
@com.carto.utils.DontObfuscate public class CartoOfflineVectorTileLayer extends CartoVectorTileLayer {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public CartoOfflineVectorTileLayer(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(CartoOfflineVectorTileLayer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CartoOfflineVectorTileLayerModuleJNI.delete_CartoOfflineVectorTileLayer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.layers.CartoOfflineVectorTileLayer swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.layers.CartoOfflineVectorTileLayerModuleJNI.CartoOfflineVectorTileLayer_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.layers.CartoOfflineVectorTileLayer) director;
    }

    String objClassName = com.carto.layers.CartoOfflineVectorTileLayerModuleJNI.CartoOfflineVectorTileLayer_swigGetClassName(cPtr, null);
    com.carto.layers.CartoOfflineVectorTileLayer objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.layers." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.layers.CartoOfflineVectorTileLayer) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a CartoOfflineVectorTileLayer object from a specificed base map style.<br>
 * @param packageManager The package manager instance that handles offline maps.<br>
 * @param style The style to use for the layer.
 */
  public CartoOfflineVectorTileLayer(CartoPackageManager packageManager, CartoBaseMapStyle style) {
    this(CartoOfflineVectorTileLayerModuleJNI.new_CartoOfflineVectorTileLayer__SWIG_0(CartoPackageManager.getCPtr(packageManager), packageManager, style.swigValue()), true);
  }

/**
 * Constructs a CartoOfflineVectorTileLayer object from a source name and style asset package.<br>
 * Style asset package defines visual style of the map and must be compatible with the source.<br>
 * @param packageManager The package manager instance that handles offline maps.<br>
 * @param styleAssetPackage The style asset package (usually a zipped file or an asset)
 */
  public CartoOfflineVectorTileLayer(CartoPackageManager packageManager, AssetPackage styleAssetPackage) {
    this(CartoOfflineVectorTileLayerModuleJNI.new_CartoOfflineVectorTileLayer__SWIG_1(CartoPackageManager.getCPtr(packageManager), packageManager, AssetPackage.getCPtr(styleAssetPackage), styleAssetPackage), true);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return CartoOfflineVectorTileLayerModuleJNI.CartoOfflineVectorTileLayer_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return CartoOfflineVectorTileLayerModuleJNI.CartoOfflineVectorTileLayer_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return CartoOfflineVectorTileLayerModuleJNI.CartoOfflineVectorTileLayer_swigGetDirectorObject(swigCPtr, this);
  }

}
