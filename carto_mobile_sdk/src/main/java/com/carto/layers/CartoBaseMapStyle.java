/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.layers;

/**
 * Built-in Carto basemap styles.
 */
public enum CartoBaseMapStyle {
/**
 * The Positron style. Replacement for older 'grey' style.
 */
  CARTO_BASEMAP_STYLE_POSITRON,
/**
 * The Darkmatter style. Replacement for older 'dark' style.
 */
  CARTO_BASEMAP_STYLE_DARKMATTER,
/**
 * The Voyager style. Replacement for older 'bright' style.
 */
  CARTO_BASEMAP_STYLE_VOYAGER;

  public final int swigValue() {
    return swigValue;
  }

  public static CartoBaseMapStyle swigToEnum(int swigValue) {
    CartoBaseMapStyle[] swigValues = CartoBaseMapStyle.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (CartoBaseMapStyle swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + CartoBaseMapStyle.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private CartoBaseMapStyle() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private CartoBaseMapStyle(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private CartoBaseMapStyle(CartoBaseMapStyle swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

