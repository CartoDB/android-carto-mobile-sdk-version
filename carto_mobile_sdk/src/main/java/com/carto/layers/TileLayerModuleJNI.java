/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.layers;

import com.carto.core.MapPos;
import com.carto.core.MapTile;
import com.carto.core.MapBounds;
import com.carto.datasources.TileDataSource;
import com.carto.layers.TileLoadListener;
import com.carto.layers.UTFGridEventListener;
import com.carto.layers.Layer;

/** @hidden */
@com.carto.utils.DontObfuscate public class TileLayerModuleJNI {
  public final static native void delete_TileLayer(long jarg1);
  public final static native long TileLayer_getDataSource(long jarg1, TileLayer jarg1_);
  public final static native long TileLayer_getUTFGridDataSource(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setUTFGridDataSource(long jarg1, TileLayer jarg1_, long jarg2, TileDataSource jarg2_);
  public final static native int TileLayer_getFrameNr(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setFrameNr(long jarg1, TileLayer jarg1_, int jarg2);
  public final static native boolean TileLayer_isPreloading(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setPreloading(long jarg1, TileLayer jarg1_, boolean jarg2);
  public final static native boolean TileLayer_isSynchronizedRefresh(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setSynchronizedRefresh(long jarg1, TileLayer jarg1_, boolean jarg2);
  public final static native int TileLayer_getTileSubstitutionPolicy(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setTileSubstitutionPolicy(long jarg1, TileLayer jarg1_, int jarg2);
  public final static native float TileLayer_getZoomLevelBias(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setZoomLevelBias(long jarg1, TileLayer jarg1_, float jarg2);
  public final static native int TileLayer_getMaxOverzoomLevel(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setMaxOverzoomLevel(long jarg1, TileLayer jarg1_, int jarg2);
  public final static native int TileLayer_getMaxUnderzoomLevel(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setMaxUnderzoomLevel(long jarg1, TileLayer jarg1_, int jarg2);
  public final static native long TileLayer_calculateMapTile(long jarg1, TileLayer jarg1_, long jarg2, MapPos jarg2_, int jarg3);
  public final static native long TileLayer_calculateMapTileOrigin(long jarg1, TileLayer jarg1_, long jarg2, MapTile jarg2_);
  public final static native long TileLayer_calculateMapTileBounds(long jarg1, TileLayer jarg1_, long jarg2, MapTile jarg2_);
  public final static native void TileLayer_clearTileCaches(long jarg1, TileLayer jarg1_, boolean jarg2);
  public final static native long TileLayer_getTileLoadListener(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setTileLoadListener(long jarg1, TileLayer jarg1_, long jarg2, TileLoadListener jarg2_);
  public final static native long TileLayer_getUTFGridEventListener(long jarg1, TileLayer jarg1_);
  public final static native void TileLayer_setUTFGridEventListener(long jarg1, TileLayer jarg1_, long jarg2, UTFGridEventListener jarg2_);
  public final static native boolean TileLayer_isUpdateInProgress(long jarg1, TileLayer jarg1_);
  public final static native long TileLayer_swigGetRawPtr(long jarg1, TileLayer jarg1_);
  public final static native String TileLayer_swigGetClassName(long jarg1, TileLayer jarg1_);
  public final static native Object TileLayer_swigGetDirectorObject(long jarg1, TileLayer jarg1_);
  public final static native long TileLayer_SWIGSmartPtrUpcast(long jarg1);
}
