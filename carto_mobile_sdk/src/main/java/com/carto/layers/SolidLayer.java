/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.layers;

import com.carto.graphics.Color;
import com.carto.graphics.Bitmap;
import com.carto.layers.Layer;

/**
 * A solid layer that displays predefined color or bitmap.<br>
 * @deprecated 
 */
@com.carto.utils.DontObfuscate public class SolidLayer extends Layer {
  /** @hidden */
  private transient long swigCPtr;

  /** @hidden */
  public SolidLayer(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(SolidLayer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SolidLayerModuleJNI.delete_SolidLayer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }


  /**
   * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
   * @param cPtr The native pointer of the instance.
   * @param cMemoryOwn The ownership flag.
   * @return The created instance.
   */
  /** @hidden */
  public static com.carto.layers.SolidLayer swigCreatePolymorphicInstance(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0) {
      return null;
    }

    Object director = com.carto.layers.SolidLayerModuleJNI.SolidLayer_swigGetDirectorObject(cPtr, null);
    if (director != null) {
      return (com.carto.layers.SolidLayer) director;
    }

    String objClassName = com.carto.layers.SolidLayerModuleJNI.SolidLayer_swigGetClassName(cPtr, null);
    com.carto.layers.SolidLayer objInstance = null;
    try {
      Class<?> objClass = Class.forName("com.carto.layers." + objClassName);
      Class<?>[] argTypes = new Class<?>[] {long.class, boolean.class};
      Object[] args = new Object[] {cPtr, cMemoryOwn};
      java.lang.reflect.Constructor<?> constructor = objClass.getDeclaredConstructor(argTypes);
      objInstance = (com.carto.layers.SolidLayer) constructor.newInstance(args);
    } catch (Exception e) {
      com.carto.utils.Log.error("Carto Mobile SDK: Could not instantiate class: " + objClassName + " error: " + e.getMessage());
    }
    return objInstance;
  }


/**
 * Constructs a SolidLayer object from a color.<br>
 * @param color The color for the layer.
 */
  public SolidLayer(Color color) {
    this(SolidLayerModuleJNI.new_SolidLayer__SWIG_0(Color.getCPtr(color), color), true);
  }

/**
 * Constructs a SolidLayer object from a bitmap.<br>
 * @param bitmap The bitmap for the layer.
 */
  public SolidLayer(Bitmap bitmap) {
    this(SolidLayerModuleJNI.new_SolidLayer__SWIG_1(Bitmap.getCPtr(bitmap), bitmap), true);
  }

/**
 * Returns the color of this layer.<br>
 * @return The color of this layer..
 */
  public Color getColor() { return new Color(SolidLayerModuleJNI.SolidLayer_getColor(swigCPtr, this), true); }

/**
 * Sets the color of this layer.<br>
 * @param color The new color for the layer. Note: if bitmap is defined, the color is multiplied with the bitmap.
 */
  public void setColor(Color color) {
    SolidLayerModuleJNI.SolidLayer_setColor(swigCPtr, this, Color.getCPtr(color), color);
  }

/**
 * Returns the bitmap of this layer.<br>
 * @return The bitmap of this layer. Can be null.
 */
  public Bitmap getBitmap() {
    long cPtr = SolidLayerModuleJNI.SolidLayer_getBitmap(swigCPtr, this);
    return (cPtr == 0) ? null : new Bitmap(cPtr, true);
  }

/**
 * Sets the bitmap of this layer.<br>
 * @param bitmap The new bitmap for the layer. Can be null, in that case the layer color is used.
 */
  public void setBitmap(Bitmap bitmap) {
    SolidLayerModuleJNI.SolidLayer_setBitmap(swigCPtr, this, Bitmap.getCPtr(bitmap), bitmap);
  }

/**
 * Returns the bitmap scaling factor.<br>
 * @return The bitmap scaling factor.
 */
  public float getBitmapScale() {
    return SolidLayerModuleJNI.SolidLayer_getBitmapScale(swigCPtr, this);
  }

/**
 * Sets the bitmap scaling factor.<br>
 * @param scale The new bitmap scaling factor. Default is 1, which corresponds to 1:1 mapping between bitmap pixels and screen pixels.
 */
  public void setBitmapScale(float scale) {
    SolidLayerModuleJNI.SolidLayer_setBitmapScale(swigCPtr, this, scale);
  }

  public boolean isUpdateInProgress() {
    return SolidLayerModuleJNI.SolidLayer_isUpdateInProgress(swigCPtr, this);
  }

/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
  /** @hidden */
  public long swigGetRawPtr() {
    return SolidLayerModuleJNI.SolidLayer_swigGetRawPtr(swigCPtr, this);
  }

/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
  /** @hidden */
  public String swigGetClassName() {
    return SolidLayerModuleJNI.SolidLayer_swigGetClassName(swigCPtr, this);
  }

/**
 * Returns the connected director object. This is used internally by the SDK.<br>
 * @return The connected director object or null if director is not connected.
 */
  /** @hidden */
  public Object swigGetDirectorObject() {
    return SolidLayerModuleJNI.SolidLayer_swigGetDirectorObject(swigCPtr, this);
  }

}
