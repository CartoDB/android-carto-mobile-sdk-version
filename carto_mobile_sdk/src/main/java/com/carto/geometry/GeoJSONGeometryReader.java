/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.geometry;

import com.carto.geometry.Feature;
import com.carto.geometry.FeatureCollection;
import com.carto.geometry.Geometry;
import com.carto.projections.Projection;

/**
 * A GeoJSON parser.<br>
 * Parser supports Geometry, Feature and FeatureCollection inputs.
 */
public class GeoJSONGeometryReader {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public GeoJSONGeometryReader(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(GeoJSONGeometryReader obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GeoJSONGeometryReaderModuleJNI.delete_GeoJSONGeometryReader(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

/**
 * Constructs a new GeoJSONGeometryReader object.
 */
  public GeoJSONGeometryReader() {
    this(GeoJSONGeometryReaderModuleJNI.new_GeoJSONGeometryReader(), true);
  }

/**
 * Returns the current target projection. If target projection is set, all geometry<br>
 * coordinates will be converted from WGS84 to target projection coordinate system.<br>
 * @return The current target projection or null.
 */
  public Projection getTargetProjection() {
  long cPtr = GeoJSONGeometryReaderModuleJNI.GeoJSONGeometryReader_getTargetProjection(swigCPtr, this);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.projections.Projection.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Sets the current target projection. If target projection is set, all geometry<br>
 * coordinates will be converted from WGS84 to target projection coordinate system.<br>
 * @param proj The new target projection or null.
 */
  public void setTargetProjection(Projection proj) {
    GeoJSONGeometryReaderModuleJNI.GeoJSONGeometryReader_setTargetProjection(swigCPtr, this, Projection.getCPtr(proj), proj);
  }

/**
 * Reads geometry from the specified GeoJSON string.<br>
 * @param geoJSON The GeoJSON string to read.<br>
 * @return The geometry read from the string.<br>
 * @throws java.lang.Exception If string could not be parsed.
 */
  public Geometry readGeometry(String geoJSON) {
  long cPtr = GeoJSONGeometryReaderModuleJNI.GeoJSONGeometryReader_readGeometry(swigCPtr, this, geoJSON);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.geometry.Geometry.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Reads feature from the specified GeoJSON string.<br>
 * @param geoJSON The GeoJSON string to read.<br>
 * @return The feature read from the string.<br>
 * @throws java.lang.Exception If string could not be parsed.
 */
  public Feature readFeature(String geoJSON) {
  long cPtr = GeoJSONGeometryReaderModuleJNI.GeoJSONGeometryReader_readFeature(swigCPtr, this, geoJSON);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.geometry.Feature.swigCreatePolymorphicInstance(cPtr, true);
}

/**
 * Reads feature collection from the specified GeoJSON string.<br>
 * @param geoJSON The GeoJSON string to read.<br>
 * @return The feature collection read from the string.<br>
 * @throws java.lang.Exception If string could not be parsed.
 */
  public FeatureCollection readFeatureCollection(String geoJSON) {
  long cPtr = GeoJSONGeometryReaderModuleJNI.GeoJSONGeometryReader_readFeatureCollection(swigCPtr, this, geoJSON);
  if (cPtr == 0) {
    return null;
  }
  /** @hidden */
  return com.carto.geometry.FeatureCollection.swigCreatePolymorphicInstance(cPtr, true);
}

}
