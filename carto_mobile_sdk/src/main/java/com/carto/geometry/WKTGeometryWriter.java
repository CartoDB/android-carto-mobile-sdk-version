/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.geometry;

import com.carto.geometry.Geometry;

/**
 * Generates Well Known Text (WKT) representation of the geometry.<br>
 * Supports both 2D and 3D coordinate serialization.
 */
public class WKTGeometryWriter {
  /** @hidden */
  private transient long swigCPtr;
  /** @hidden */
  protected transient boolean swigCMemOwn;

  /** @hidden */
  public WKTGeometryWriter(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /** @hidden */
  public static long getCPtr(WKTGeometryWriter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /** @hidden */
  protected void finalize() {
    delete();
  }

  /** @hidden */
  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        WKTGeometryWriterModuleJNI.delete_WKTGeometryWriter(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

/**
 * Constructs a new WKTGeometryWriter objects with default settings.
 */
  public WKTGeometryWriter() {
    this(WKTGeometryWriterModuleJNI.new_WKTGeometryWriter(), true);
  }

/**
 * Returns the state of Z coordinate serialization.<br>
 * @return True if Z coordinate is stored in WKT output, false otherwise. The default is false.
 */
  public boolean getZ() {
    return WKTGeometryWriterModuleJNI.WKTGeometryWriter_getZ(swigCPtr, this);
  }

/**
 * Sets the state of Z coordinate serialization.<br>
 * @param z True when Z coordinate should be serialized, false otherwise.
 */
  public void setZ(boolean z) {
    WKTGeometryWriterModuleJNI.WKTGeometryWriter_setZ(swigCPtr, this, z);
  }

/**
 * Creates a WKT string corresponding to the specified geometry.<br>
 * @param geometry The geometry to write.<br>
 * @return The corresponding WKT string.<br>
 * @throws java.lang.Exception If writing fails.
 */
  public String writeGeometry(Geometry geometry) {
    return WKTGeometryWriterModuleJNI.WKTGeometryWriter_writeGeometry(swigCPtr, this, Geometry.getCPtr(geometry), geometry);
  }

}
