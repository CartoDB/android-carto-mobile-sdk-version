/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.carto.renderers;

import com.carto.graphics.Bitmap;

/** @hidden */
@com.carto.utils.DontObfuscate public class RendererCaptureListenerModuleJNI {
  public final static native void delete_RendererCaptureListener(long jarg1);
  public final static native void RendererCaptureListener_onMapRendered(long jarg1, RendererCaptureListener jarg1_, long jarg2, Bitmap jarg2_);
  public final static native void RendererCaptureListener_onMapRenderedSwigExplicitRendererCaptureListener(long jarg1, RendererCaptureListener jarg1_, long jarg2, Bitmap jarg2_);
  public final static native long RendererCaptureListener_swigGetRawPtr(long jarg1, RendererCaptureListener jarg1_);
  public final static native String RendererCaptureListener_swigGetClassName(long jarg1, RendererCaptureListener jarg1_);
  public final static native Object RendererCaptureListener_swigGetDirectorObject(long jarg1, RendererCaptureListener jarg1_);
  public final static native long new_RendererCaptureListener();
  public final static native void RendererCaptureListener_director_connect(RendererCaptureListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void RendererCaptureListener_change_ownership(RendererCaptureListener obj, long cptr, boolean take_or_release);

  public static void SwigDirector_RendererCaptureListener_onMapRendered(RendererCaptureListener self, long bitmap) {
    self.onMapRendered(new Bitmap(bitmap, true));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
